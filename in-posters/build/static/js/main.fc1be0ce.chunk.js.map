{"version":3,"sources":["components/components_images/Wolf.svg","components/components_images/mountain_for_logo.jpg","components/components_images/heart.png","serviceWorker.js","components/postersGallary.jsx","Toaster.js","pages/addUserByAdmin/index.js","pages/home/index.js","components/header.jsx","components/accountDetails.jsx","components/orderListItem.js","components/orderListUser.jsx","pages/account/index.js","pages/register/index.js","components/NavigationBar.js","helpers/Paypal.js","reducers/CartReducer.js","contexts/CartContext.js","pages/cart/posterViewInCart.js","pages/cart/index.js","pages/login/index.js","components/posterImage.js","pages/Store/posterViewInShop.js","pages/liked/index.js","pages/contact/index.js","pages/Store/index.js","pages/updateUserDetails/index.js","pages/orderLists/index.js","components/posterInfo.js","pages/stock/posterViewInStock.js","pages/stock/index.js","pages/poster/index.js","pages/users/accountDetailsAdmin.js","pages/users/index.js","pages/groupsMenu/index.js","pages/chatRoom/index.js","pages/chatRoom/messageView.js","components/about.jsx","components/LoaderButton.js","pages/forgotPassword/index.js","helpers/FileUpload.js","pages/addPoster/index.js","components/index.js","theme.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","PostersGallary","props","context","responsive","0","items","1024","state","galleryItems","axios","get","then","res","img","data","map","m","src","download_url","alt","setState","catch","error","console","log","this","getData","autoPlayInterval","autoPlayDirection","autoPlay","fadeOutAnimation","mouseTrackingEnabled","disableAutoPlayOnAction","Component","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","makeToast","type","msg","fire","icon","title","useStyles","makeStyles","theme","root","width","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","marginTop","submit","withRouter","classes","history","useHistory","React","useState","fullName","setFullName","phone","setPhone","address","setAddress","email","setEmail","category","setCategory","password","setPassword","onSuccess","push","onFailure","response","message","className","Avatar","Typography","component","variant","onSubmit","e","preventDefault","e_mail","sha256","process","SALT_PASSWORD","$","ajax","url","noValidate","Grid","container","item","xs","sm","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","onChange","target","value","Button","justifyContent","FormControl","formControl","InputLabel","Select","labelId","MenuItem","HomePage","logoImg","border_radius","Header","styles","Navbar","bg","Brand","onClick","logo","maxWidth","AccountDetails","user","setUser","useEffect","a","fetch","sessionStorage","getItem","fullResponse","json","responseJson","fetchUser","Card","cardStl","CardHeader","headerStl","subheader","Description","List","ListItem","ListItemAvatar","CardActions","disableSpacing","IconButton","aria-label","require","overflow","boxShadow","borderRadius","zIndex","padding","color","contentStl","OrderListItem","order","_id","minWidth","marginRight","heroContent","background","heroButtons","cardGrid","paddingTop","paddingBottom","footer","OrderListUser","orders","ordersSet","fetchOrders","r","Fragment","CssBaseline","Container","undefined","index","key","md","Account","setItem","localStorage","setupSocket","Link","from","NavigationBar","JSON","parse","checkedRemember","redirectStore","redirectContact","redirectLiked","redirectAccount","redirectCart","redirectOrderList","redirectStock","redirectHome","redirectChat","onLogout","logOutGoogle","useGoogleLogout","clientId","onLogoutSuccess","err","style","Nav","fill","varient","justify-content","Paypal","total","toPay","env","client","sandbox","production","currency","onError","payment","onCancel","size","shape","handleChangeAmountItem","posterId","amount","amountChosen","done","fail","jqXhr","sumItems","cartItems","stringify","length","Storage","itemCount","reduce","totalPrice","poster","price","toFixed","CartReducer","action","find","payload","measurementChosen","measurement","chosenMeasurement","handleAddItem","handleRemoveItem","filter","findIndex","handleChangeSizeItem","checkout","CartContext","createContext","storage","initialState","CartContextProvider","children","useReducer","dispatch","contextValues","removePoster","addingPoster","increase","decrease","changeAmount","changeSize","clearCart","handleCheckout","Provider","PosterViewInCart","useContext","renderCartImage","images","products","Cart","flexGrow","fullScreen","onCheckout","showSuccess","setShowSuccess","status","description","transactionError","transactionCanceled","setChecked","addUserGoogle","googleLogIn","useGoogleLogin","responseGoogleSuccess","profileObj","googleId","familyName","responseGoogleFailure","isSignedIn","accessType","elevation","square","FormControlLabel","control","Checkbox","checked","event","PosterImage","flex","card","subheading","openTitle","fontSize","media","marginLeft","verticalAlign","link","addCart","PosterViewInShop","renderStore","liked","setLiked","CardMedia","tagList","Liked","posters","postersSet","fetchPosters","align","gutterBottom","mainFeaturedPost","common","white","marginBottom","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","Contact","Paper","multiline","rows","Store","postersToShow","postersToShowSet","genre","setGenre","searchValue","setSearchValue","Autocomplete","newInputValue","options","option","renderInput","params","defaultValue","autoWidth","UpdateUserDetails","OrderList","PosterInfo","setPoster","detail","creator","Item","s","Chip","sizeList","deletePoster","expand","transform","transition","transitions","create","duration","shortest","expandOpen","red","PosterViewInStock","renderStock","gutter","lg","Stock","maxHeight","PosterData","full","handleHeartClick","bind","handleMeasurement","resp","ok","Error","statusText","cartContext","htmlFor","native","inputProps","direction","handleClick","heading","ListItemText","tag","contextType","withStyles","textAlign","text","withTheme","AccountDetailsAdmin","Content","Meta","primary","UserData","users","usersSet","usersToShow","usersToShowSet","role","setRole","fetchUsers","Group","GroupsMenu","chatrooms","setChatrooms","nameRef","createRef","getChatrooms","setTimeout","placeholder","ref","current","post","headers","authorization","chatroom","to","socket","like","setLike","unlike","setUnlike","postLike","massageId","userAdded","likeStatus","unlikeStatus","userEmail","likes","unlikes","chatroomId","messages","setMessages","messageRef","useRef","setUserEmail","on","newMessages","emit","i","userId","label_data","colors","LoaderButton","isLoading","disabled","Spinner","as","animation","aria-hidden","ForgotPassword","code","setCode","confirmPassword","setConfirmPassword","codeSent","setCodeSent","confirmed","setConfirmed","isConfirming","setIsConfirming","isSendingCode","setIsSendingCode","handleSendEmailClick","handleConfirmClick","redirectLogin","FormGroup","bsSize","controlId","FormLabel","block","FileUpload","Images","setImages","onDrop","files","formData","FormData","append","Axios","header","success","refreshFunction","alert","multiple","maxSize","getRootProps","getInputProps","border","overflowX","origin","currentIndex","indexOf","newImages","splice","onDelete","chips","flexWrap","chip","noLabel","getStyles","list","fontWeight","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","ITEM_HEIGHT","constSizeList","constTagList","pName","setPName","setCreator","setImg","setPrice","setSizeList","setTagList","setAmount","useTheme","input","Input","renderValue","selected","App","setSocket","newSocket","io","href","query","exact","render","path","createMuiTheme","light","dark","contrastText","blueGrey","protectedTitle","lightGreen","ReactDOM","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc1be0ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Wolf.dfcb28b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/mountain_for_logo.66f8a98c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/heart.bed171f3.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport axios from 'axios'\r\n\r\nclass PostersGallary extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            galleryItems: [],\r\n        };\r\n    }//change to get posters and then show our gallery\r\n    getData (){\r\n        axios.get(`https://picsum.photos/v2/list?limit=10`, {})\r\n            .then(res => {\r\n                const data = res.data;\r\n                const img = data.map(m =>\r\n                    <img src={m.download_url} alt=\"\"/>\r\n                );\r\n                this.setState({\r\n                    galleryItems: img\r\n                })\r\n            }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    responsive = {\r\n        0: { items: 1 },\r\n        1024: { items: 2 },\r\n    };\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AliceCarousel\r\n                    items={this.state.galleryItems}\r\n                    responsive={this.responsive}\r\n                    autoPlayInterval={2000}\r\n                    autoPlayDirection=\"rtl\"\r\n                    autoPlay={true}\r\n                    fadeOutAnimation={true}\r\n                    mouseTrackingEnabled={true}\r\n                    disableAutoPlayOnAction={true}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostersGallary;","import Swal from \"sweetalert2\";\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  onOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nconst makeToast = (type, msg) => {\n  Toast.fire({\n    icon: type,\n    title: msg,\n  });\n};\n\nexport default makeToast;\n","import React, {useState, useEffect, Component} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomePage from \"../home\";\r\nimport makeToast from \"../../Toaster\";\r\nimport {sha256} from \"js-sha256\";\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    image: {\r\n        backgroundImage: \"url(https://source.unsplash.com/random/?phone)\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundColor:\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst RegisterByAdmin= (props) => {\r\n    const classes = useStyles();\r\nconst history=useHistory();\r\n    const [fullName, setFullName] = React.useState(\"\");\r\n    const [phone, setPhone] = React.useState(\"\");\r\n    const [address,setAddress]=React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n\r\n     const [category, setCategory] = React.useState(\"Customer\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const onChangeEmailHandler  = email => {\r\n        setEmail(email.target.value);\r\n    };\r\n    const onChangePasswordHandler = (e) => setPassword( e.target.value);\r\n    const onChangeName = (e) => setFullName( e.target.value);\r\n    const onChangePhone = (e) => setPhone( e.target.value);\r\n    const onChangeAddress = (e) => setAddress( e.target.value);\r\n    const onChangeCategory = (e) => setCategory( e.target.value);\r\n\r\n    const onSuccess = () => {\r\n        console.log(\"user added\");\r\n        history.push(\"/users\");\r\n    };\r\n    const onFailure = error => {\r\n        makeToast(\"error\", error.response.data.message);\r\n    };\r\n    const onSubmitRegisterHandler= (e) => {\r\n        e.preventDefault();\r\n\r\n        var data = {\r\n            e_mail: email,\r\n            password: sha256(password+process.env.SALT_PASSWORD),\r\n            fullName: fullName,\r\n            phone:phone,\r\n            address:address,\r\n            category:category}\r\n        ;\r\n\r\n        // Submit form via jQuery/AJAX\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"/add_user\",\r\n            data: data,\r\n        }).then(onSuccess)\r\n            .catch(onFailure);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <br/>\r\n            <br/>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon/>\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Add User\r\n            </Typography>\r\n\r\n            <form\r\n                className={classes.form}\r\n                onSubmit={onSubmitRegisterHandler}\r\n                noValidate\r\n            >\r\n                <Grid container spacing={2}>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n\r\n                        <TextField\r\n                            autoComplete=\"fullName\"\r\n                            name=\"fullName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"fullName\"\r\n                            label=\"Name\"\r\n                            autoFocus\r\n                            onChange={onChangeName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            onChange={onChangeEmailHandler}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={onChangePasswordHandler}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone Number\"\r\n                            name=\"phone\"\r\n                            type=\"number\"\r\n                            autoComplete=\"phone\"\r\n                            onChange={onChangePhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            name=\"address\"\r\n                            autoComplete=\"address\"\r\n                            onChange={onChangeAddress}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    className={classes.submit}>\r\n                    Register\r\n                </Button>\r\n                <Grid container justifyContent=\"flex-end\">\r\n                    <Grid item>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={category}\r\n                                onChange={onChangeCategory}\r\n                                label=\"Category\"\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>Customer</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Admin\"}>Admin</MenuItem>\r\n                                <MenuItem value={\"Customer\"}>Customer</MenuItem>\r\n                                <MenuItem value={\"Employee\"}>Employee</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nexport default withRouter(RegisterByAdmin);\r\n\r\n\r\n","import PostersGallary from '../../components/postersGallary'\r\nimport React, {Component} from 'react';\r\nimport RegisterByAdmin from \"../addUserByAdmin\";\r\n\r\nexport default function HomePage() {\r\n            return (\r\n                <div>\r\n                    <PostersGallary/>\r\n                </div>\r\n            );\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport logo from \"./components_images/Wolf.svg\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button} from \"tabler-react\";\r\nimport {Form,FormControl} from \"react-bootstrap\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {useHistory} from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    logoImg:{\r\n    width:45,\r\n    height:45,\r\n    border_radius: 1\r\n}\r\n}));\r\n\r\nexport default function Header() {\r\n    const styles=useStyles();\r\n    let history = useHistory();\r\n    function redirectHome(e) {\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand onClick={redirectHome}>\r\n                    <img\r\n                        alt=\"\"\r\n                        src={logo}\r\n                        className={styles.logoImg}\r\n                    />{' '}\r\n                    inPosters\r\n                </Navbar.Brand>\r\n\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\n\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {red} from \"@material-ui/core/colors\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n\r\n\r\n}));\r\nexport default function AccountDetails() {\r\n\r\n    // const [email,setEmail] = React.useState(sessionStorage.getItem(\"userEmail\"));\r\n    // const [phone,setPhone] = React.useState(\"\");\r\n    // const [fullName,setFullName] = React.useState(\"\");\r\n    // const [address,setAddress] = React.useState(\"\");\r\n    // const [category,setCategory] = React.useState(sessionStorage.getItem(\"userCategory\"));\r\n    const [user, setUser] = React.useState({});\r\n    React.useEffect(() => {\r\n        async function fetchUser() {\r\n            const fullResponse = await fetch(\r\n                \"/get_user?email=\"+sessionStorage.getItem(\"userEmail\")\r\n            );\r\n            const responseJson = await fullResponse.json();\r\n            setUser(responseJson);\r\n        }\r\n\r\n        fetchUser();\r\n    }, []);\r\n    // React.useEffect(() => {  async function fetchUser() {const fullResponse = await fetch(\r\n    //     \"/get_user?email=\"+sessionStorage.getItem(\"userEmail\")\r\n    // );\r\n    //     const responseJson = await fullResponse.json();\r\n    //     if(responseJson!==undefined) {\r\n    //         setPhone(responseJson.phone);\r\n    //         setFullName(responseJson.fullName);\r\n    //         setAddress(responseJson.address);\r\n    //         console.log(phone);\r\n    //\r\n    //     }\r\n    //\r\n    // }\r\n    //     fetchUser().then(r => {\r\n    //         console.log(\"got user\");\r\n    //     })}, []);\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const EditUserItemHandler=(e)=>{\r\n        e.preventDefault();\r\n        history.push(\"/user_edit\");\r\n    };\r\n        return (\r\n                <Card className={classes.cardStl}>\r\n                    <CardHeader className={classes.headerStl}\r\n                                title={user.fullName}\r\n                                subheader={user.e_mail}\r\n                    />\r\n                    <Card.Description>\r\n                        <List className={classes.root}>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <PhoneIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <Typography>{user.phone}</Typography> />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <PublicIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <Typography>{user.address}</Typography>\r\n                            </ListItem>\r\n                        </List>}\r\n                    </Card.Description>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            aria-label=\"Edit\"\r\n                            onClick={EditUserItemHandler}\r\n                        >\r\n                            <EditIcon/>\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </Card>);\r\n                {/*  <Card.Content>\r\n                    <Card.Header>{fullName}</Card.Header>\r\n                    <Card.Meta>{category}</Card.Meta>\r\n                    <Card.Description>\r\n                         <List className={classes.root}>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <MailOutlineIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                               <Typography>{email}</Typography>}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <PhoneIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <Typography>{phone}</Typography> />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <PublicIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                               <Typography>{address}</Typography>\r\n                            </ListItem>\r\n                        </List>}\r\n                    </Card.Description>\r\n                </Card.Content>\r\n                <CardActions disableSpacing>\r\n                    <IconButton\r\n                        aria-label=\"Edit\"\r\n                        onClick={EditUserItemHandler}>\r\n                        <EditIcon/>\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>*/}\r\n\r\n\r\n};\r\n","import {useHistory} from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport {useContext} from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nvar React = require('react');\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardStl : {\r\n        backgroundColor: '#fafafa',\r\n        width: '30%',\r\n        height: '20%',\r\n        overflow: 'hidden',\r\n        boxShadow: '.25px .25px 5px .25px',\r\n        borderRadius: '2px 2px 2px 2px',\r\n        zIndex: 5\r\n    },\r\n\r\n    headerStl : {\r\n        backgroundColor: '#901111', // red\r\n        padding: '1%',\r\n        color: '#eceff1',\r\n        position: 'relative'\r\n    },\r\n\r\n    contentStl :{\r\n        color: 'rgb(0, 0, 0, 0.54)',\r\n        padding: '2%'\r\n    }\r\n}));\r\n\r\nexport default function OrderListItem({ order }) {\r\n    const classes = useStyles();\r\n\r\n//change icon to say that it means finish\r\n    function FinishOrderItemHandler(e) {\r\n\r\n    }\r\n    return (\r\n        <Card className={classes.cardStl}>\r\n            <CardHeader className={classes.headerStl}\r\n                        title={order._id}\r\n            />\r\n            <CardActions disableSpacing>\r\n                <IconButton\r\n                    aria-label=\"Edit\"\r\n                    onClick={FinishOrderItemHandler}\r\n                >\r\n                    <EditIcon/>\r\n                </IconButton>\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","import React, { useContext } from \"react\";\r\nimport OrderListItem from \"./orderListItem\";\r\n//import { ProductsContext } from \"../../contexts/ProductsContext\";\r\n//import styles from './ProductsGrid.module.scss';\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst OrderListUser = () => {\r\n    const classes = useStyles();\r\n\r\n    const [orders, ordersSet] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        async function fetchOrders() {\r\n            const fullResponse = await fetch(\r\n                \"/get_user_orders?email=\"+sessionStorage.getItem(\"userEmail\")\r\n            );\r\n            const responseJson = await fullResponse.json();\r\n            ordersSet(responseJson);\r\n        }\r\n\r\n        fetchOrders().then(r => console.log(\"got\"));\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <main>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    <Grid container spacing={4}>\r\n                        {orders !== undefined &&\r\n                        orders.map((order, index) => (\r\n                            <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                <OrderListItem key={index} order={order} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OrderListUser;\r\n","import React, {Component} from 'react';\r\nimport AccountDetails from \"../../components/accountDetails\";\r\nimport OrderListUser from \"../../components/orderListUser\";\r\nimport {Error404Page} from \"tabler-react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nexport default function Account(){\r\n\r\n\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //         user: {}\r\n    //     };\r\n    // }\r\n    // async componentDidMount() {\r\n    //     try {\r\n    //         const resp = await fetch(\"/get_user?email=\" + sessionStorage.getItem(\"userEmail\"));\r\n    //         if (!resp.ok) {\r\n    //             throw Error(resp.statusText);\r\n    //         }\r\n    //         const user = await resp.json();\r\n    //         console.log(user);\r\n    //\r\n    //         this.setState({user: user});\r\n    //\r\n    //     } catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // }\r\n    // render() {\r\n        return (<div>\r\n                <h5>MyAccount</h5>\r\n                {<AccountDetails/>}\r\n                <h5>OrderList</h5>\r\n                <OrderListUser/>\r\n            </div>\r\n        );};\r\n    //}\r\n\r\n        //     }{/*user={userD}*/}\r\n        // ).catch(r => {console.log(\"failed to get user\");\r\n        // return (<div>\r\n        //        <Error404Page/>\r\n        //     </div>\r\n        // );});\r\n\r\n\r\n","import React, {useState, useEffect, Component} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomePage from \"../home\";\r\nimport makeToast from \"../../Toaster\";\r\nimport {sha256} from \"js-sha256\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    image: {\r\n        backgroundImage: \"url(https://source.unsplash.com/random/?phone)\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundColor:\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Register= (props) => {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [fullName, setFullName] = React.useState(\"\");\r\n    const [phone, setPhone] = React.useState(\"\");\r\n    const [address,setAddress]=React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const onChangeEmailHandler  = email => {\r\n        setEmail(email.target.value);\r\n    };\r\n    const onChangePasswordHandler = (e) => setPassword( e.target.value);\r\n    const onChangeName = (e) => setFullName( e.target.value);\r\n    const onChangePhone = (e) => setPhone( e.target.value);\r\n    const onChangeAddress = (e) => setAddress( e.target.value);\r\n\r\n    const onSuccess = () => {\r\n                sessionStorage.setItem(\"userCategory\", \"Customer\");\r\n                sessionStorage.setItem(\"userEmail\",email);\r\n                localStorage.setItem(\"connectedByGoogle\",\"false\");\r\n                props.setupSocket();\r\n                history.push(\"/\");\r\n    };\r\n    const onFailure = error => {\r\n        makeToast(\"error\", error.response.data.message);\r\n    };\r\n    const onSubmitRegisterHandler= (e) => {\r\n        e.preventDefault();\r\n\r\n        var data = {\r\n            e_mail: email,\r\n            password: sha256(password+process.env.SALT_PASSWORD),\r\n            fullName: fullName,\r\n            phone:phone,\r\n            address:address\r\n        };\r\n\r\n        // Submit form via jQuery/AJAX\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"/register\",\r\n            data: data,\r\n        }).then(onSuccess)\r\n            .catch(onFailure);\r\n    };\r\n\r\n\r\n    function redirectLogin(e) {\r\n        history.push(\"/log_in\", { from: 'anywhere' } );\r\n    }\r\n        return (\r\n            <div className={classes.paper}>\r\n                <br/>\r\n                <br/>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                </Typography>\r\n\r\n                <form\r\n                    className={classes.form}\r\n                    onSubmit={onSubmitRegisterHandler}\r\n                    noValidate\r\n                >\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n\r\n                            <TextField\r\n                                autoComplete=\"fullName\"\r\n                                name=\"fullName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"fullName\"\r\n                                label=\"Name\"\r\n                                autoFocus\r\n                                onChange={onChangeName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={onChangeEmailHandler}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={onChangePasswordHandler}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"phone\"\r\n                                label=\"Phone Number\"\r\n                                name=\"phone\"\r\n                                type=\"number\"\r\n                                autoComplete=\"phone\"\r\n                                onChange={onChangePhone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                name=\"address\"\r\n                                autoComplete=\"address\"\r\n                                onChange={onChangeAddress}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={classes.submit}>\r\n                        Register\r\n                    </Button>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link onClick={redirectLogin} variant=\"body2\">\r\n                                Already have an account? Login\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        );\r\n};\r\nexport default withRouter(Register);\r\n\r\n\r\n","import React, {  useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport {Navbar,Nav} from \"react-bootstrap\"\r\nimport heart from \"./components_images/heart.png\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport {useGoogleLogout} from \"react-google-login\";\r\nimport BorderHeartIcon from \"@material-ui/icons/FavoriteBorder\";\r\n\r\n\r\nexport default function NavigationBar({category}) {\r\n    let history = useHistory();\r\n        const [checkedRemember] =React.useState(JSON.parse(localStorage.getItem(\"checked\")));\r\n        const [connectByGoogle]=React.useState(JSON.parse(localStorage.getItem(\"connectedByGoogle\")));\r\n       // const [category,setCategory] = React.useState(sessionStorage.getItem(\"userCategory\"));\r\n   // const [email] = React.useState(sessionStorage.getItem(\"userEmail\"));\r\n        if(checkedRemember){\r\n           // setCategory(localStorage.getItem(\"userCategory\"));\r\n             category=localStorage.getItem(\"userCategory\");\r\n        sessionStorage.setItem(\"userCategory\",category);\r\n            sessionStorage.setItem(\"userEmail\", localStorage.getItem(\"userEmail\"));\r\n        }\r\n\r\n    function redirectStore(e) {\r\n        history.push(\"/store\");\r\n    }\r\n\r\n    function redirectContact(e) {\r\n        history.push(\"/contact\");\r\n    }\r\n\r\n    function redirectLiked(e) {\r\n        history.push(\"/liked\");\r\n    }\r\n\r\n    function redirectAccount(e) {\r\n\r\n        if (sessionStorage.getItem(\"userEmail\")!==\"\"&&sessionStorage.getItem(\"userEmail\")!==null)\r\n            {\r\n                history.push(\"/account\");\r\n            }\r\n            else history.push(\"/log_in\", { from: 'anywhere' } )\r\n    }\r\n\r\n    function redirectCart(e) {\r\n        history.push(\"/cart\");\r\n    }\r\n\r\n\r\n    function redirectUsers(e) {\r\n        history.push(\"/users\");\r\n    }\r\n\r\n    function redirectOrderList(e) {\r\n        history.push(\"/order_list\");\r\n    }\r\n\r\n    function redirectStock(e) {\r\n        history.push(\"/stock\");\r\n    }\r\n\r\n\r\n    function redirectHome(e) {\r\n        history.push(\"/\");\r\n    }\r\n    function redirectChat(e) {\r\n        history.push(\"/groups_menu\");\r\n    }\r\n    const onLogoutSuccess = (res) => {\r\n        console.log('Logged out Success');\r\n        sessionStorage.setItem(\"userEmail\",\"\");\r\n        sessionStorage.setItem(\"userCategory\",\"\");\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onFailure = (err) => {\r\n        console.log(err);\r\n    };\r\n    const clientId=\"142120254422-j6pkdhtomqv3oqjrcgakbkuv21pk8lk7.apps.googleusercontent.com\";\r\n    function onLogout(e) {\r\n           sessionStorage.setItem(\"userEmail\",\"\");\r\n           sessionStorage.setItem(\"userCategory\",\"\");\r\n           if(JSON.parse(localStorage.getItem(\"checked\"))) {\r\n               localStorage.setItem(\"userEmail\", \"\");\r\n               localStorage.setItem(\"userCategory\", \"\");\r\n               localStorage.setItem(\"password\", \"\");\r\n           }\r\n\r\n           if(JSON.parse(localStorage.getItem(\"connectedByGoogle\")))\r\n               logOutGoogle();\r\n           history.push('/');\r\n    }\r\n    const { logOutGoogle } = useGoogleLogout({\r\n        clientId,\r\n        onLogoutSuccess,\r\n        onFailure,\r\n    });\r\n        console.log(category);\r\n    //connectByGoogle?logOutGoogle:\r\n    switch (category) {\r\n        case \"Admin\":\r\n            return (\r\n                <React.Fragment style={{display: 'flex'}}>\r\n                    <Navbar bg=\"dark\" className=\"myNavBar\">\r\n                        <Nav className=\"myNav\" >\r\n                            <Nav.Link color=\"white\" onClick={redirectHome}>Home</Nav.Link>\r\n                            <Nav.Link color=\"white\" onClick={redirectStore}>Shop</Nav.Link>\r\n                            <Nav.Link onClick={redirectAccount}>Account</Nav.Link>\r\n                            <Nav.Link onClick={redirectChat}>Chat</Nav.Link>\r\n                            <Nav.Link onClick={redirectContact}>Contact</Nav.Link>\r\n                            <Nav.Link onClick={redirectUsers}>Users</Nav.Link>\r\n                            <Nav.Link onClick={redirectOrderList}>Orders</Nav.Link>\r\n                            <Nav.Link onClick={redirectStock}>Stock</Nav.Link>\r\n                             <Nav.Link onClick={redirectLiked}>\r\n                                <BorderHeartIcon style={{fill: \"white\"}}/>\r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={redirectCart}>\r\n                                <ShoppingCartOutlinedIcon style={{fill: \"white\"}}/>\r\n                            </Nav.Link>\r\n\r\n                            <Nav.Link onClick={onLogout}>\r\n                               <ExitToAppIcon style={{fill: \"white\"}}/>\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </React.Fragment>\r\n            );\r\n        case \"Employee\":\r\n            return (\r\n                <React.Fragment>\r\n                    <Navbar bg=\"dark\" varient=\"dark\" justify-content=\"space-around\" display=\"flex\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={redirectHome}>Home</Nav.Link>\r\n                            <Nav.Link onClick={redirectStore}>Shop</Nav.Link>\r\n                            <Nav.Link onClick={redirectAccount}>Account</Nav.Link>\r\n                            <Nav.Link onClick={redirectChat}>Chat</Nav.Link>\r\n                            <Nav.Link onClick={redirectContact}>Contact</Nav.Link>\r\n                            <Nav.Link onClick={redirectOrderList}>Orders</Nav.Link>\r\n                            <Nav.Link onClick={redirectStock}>Stock</Nav.Link>\r\n                             <Nav.Link onClick={redirectLiked}>\r\n                                 <BorderHeartIcon style={{fill: \"white\"}}/>\r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={redirectCart}>\r\n                                <ShoppingCartOutlinedIcon/>\r\n                            </Nav.Link>\r\n\r\n                            <Nav.Link onClick={onLogout}>\r\n                                <ExitToAppIcon style={{fill: \"white\"}}/>\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </React.Fragment>\r\n            );\r\n        case\"Customer\":\r\n            return (\r\n                <React.Fragment>\r\n                    <Navbar bg=\"dark\" varient=\"dark\" justify-content=\"space-around\" display=\"flex\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={redirectHome}>Home</Nav.Link>\r\n                            <Nav.Link onClick={redirectStore}>Shop</Nav.Link>\r\n                            <Nav.Link onClick={redirectAccount}>Account</Nav.Link>\r\n                            <Nav.Link onClick={redirectChat}>Chat</Nav.Link>\r\n                            <Nav.Link onClick={redirectContact}>Contact</Nav.Link>\r\n                             <Nav.Link onClick={redirectLiked}>\r\n                                 <BorderHeartIcon style={{fill: \"white\"}}/>\r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={redirectCart}>\r\n                                <ShoppingCartOutlinedIcon/>\r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={onLogout}>\r\n                                <ExitToAppIcon style={{fill: \"white\"}}/>\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </React.Fragment>\r\n            );\r\n        default:\r\n            return (\r\n                <div>\r\n                    <Navbar bg=\"dark\" varient=\"dark\" justify-content=\"space-around\" display=\"flex\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={redirectHome}>Home</Nav.Link>\r\n                            <Nav.Link onClick={redirectStore}>Shop</Nav.Link>\r\n                            <Nav.Link onClick={redirectAccount}>Account</Nav.Link>\r\n                            <Nav.Link onClick={redirectContact}>Contact</Nav.Link>\r\n                            <Nav.Link onClick={redirectCart}>\r\n                                <ShoppingCartOutlinedIcon/>\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </div>\r\n            );\r\n    }\r\n\r\n }\r\n","import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nexport default class Paypal extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            console.log(\"The payment was succeeded!\", payment);\r\n            this.props.onSuccess(payment);\r\n\r\n        };\r\n\r\n        const onCancel = (data) => {\r\n            console.log('The payment was cancelled!', data);\r\n        };\r\n\r\n        const onError = (err) => {\r\n            console.log(\"Error!\", err);\r\n\r\n        };\r\n\r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        let total = this.props.toPay; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n\r\n        const client = {\r\n            sandbox: 'Ab3cenxZZJa6pqo9Jmy4feBtZsOAkWcFdoIGUbX0mjr1fHy-5JGqox8mIuXOpvQ6ey6gaTHlT2SMzadO',\r\n            production: 'Aeqh0eVfW3oajnq4CfauTYCVZ9WydFuKTI_vNX0wmJqdWpgjwwU76HJpTSOXHZhZ-A5oM4sssOQNU53l',\r\n        };\r\n        return (\r\n            <PaypalExpressBtn\r\n                env={env}\r\n                client={client}\r\n                currency={currency}\r\n                total={total}\r\n                onError={onError}\r\n                onSuccess={onSuccess}\r\n                onCancel={onCancel}\r\n                style={{\r\n                    size: 'large',\r\n                    color: 'blue',\r\n                    shape: 'rect',\r\n                    label: 'checkout'\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import $ from \"jquery\";\r\nimport makeToast from \"../Toaster\";\r\n\r\nconst handleAddItem = (posterId,measurement) => {\r\n    var data = {\r\n        email: sessionStorage.getItem(\"userEmail\"),\r\n        posterId: posterId,\r\n        chosenMeasurement:measurement\r\n    };\r\n\r\n    // Submit form via jQuery/AJAX\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: \"/add_to_cart\",\r\n        data: data,\r\n    })\r\n        .done(function(data) {makeToast(\"success\",\"Added to Cart!\")})\r\n        .fail(function(jqXhr) {});\r\n};\r\n\r\nconst handleRemoveItem = (posterId) => {\r\n    var data = {\r\n        email: sessionStorage.getItem(\"userEmail\"),\r\n        posterId: posterId,\r\n    };\r\n\r\n    // Submit form via jQuery/AJAX\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: \"/delete_from_cart\",\r\n        data: data,\r\n    })\r\n        .done(function(data) {})\r\n        .fail(function(jqXhr) {});\r\n};\r\n\r\nconst handleChangeAmountItem = (posterId, amount) => {\r\n    var data = {\r\n        email: sessionStorage.getItem(\"userEmail\"),\r\n        posterId: posterId,\r\n        amountChosen: amount,\r\n    };\r\n\r\n    // Submit form via jQuery/AJAX\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: \"/update_poster_cart_amount\",\r\n        data: data,\r\n    })\r\n        .done(function(data) {})\r\n        .fail(function(jqXhr) {});\r\n};\r\n\r\nconst handleChangeSizeItem = (posterId,measurement) => {\r\n    var data = {\r\n        email: sessionStorage.getItem(\"userEmail\"),\r\n        posterId: posterId,\r\n        measurement:measurement\r\n    };\r\n\r\n    // Submit form via jQuery/AJAX\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: \"/update_poster_cart_size\",\r\n        data: data,\r\n    })\r\n        .done(function(data) {})\r\n        .fail(function(jqXhr) {});\r\n};\r\n\r\nconst Storage = (cartItems) => {\r\n    localStorage.setItem(\r\n        \"cart\",\r\n        JSON.stringify(cartItems.length > 0 ? cartItems : [])\r\n    );\r\n};\r\n\r\nexport const sumItems = (cartItems) => {\r\n    Storage(cartItems);\r\n    let itemCount = cartItems.reduce(\r\n        (totalPrice, poster) => totalPrice + poster.amountChosen,\r\n        0\r\n    );\r\n    let totalPrice = cartItems\r\n        .reduce((totalPrice, poster) => totalPrice + poster.poster.price * poster.amountChosen, 0)\r\n        .toFixed(2);\r\n    return { itemCount, totalPrice };\r\n};\r\n\r\nexport const CartReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_ITEM\":\r\n            if (!state.cartItems.find((item) => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    amountChosen: 1,\r\n                    measurementChosen:action.measurement\r\n                });\r\n                handleAddItem(action.payload.id);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems],\r\n            };\r\n        case \"REMOVE_ITEM\":\r\n            handleRemoveItem(action.payload.id);\r\n            return {\r\n                ...state,\r\n                ...sumItems(\r\n                    state.cartItems.filter((item) => item.id !== action.payload.id)\r\n                ),\r\n                cartItems: [\r\n                    ...state.cartItems.filter((item) => item.id !== action.payload.id),\r\n                ],\r\n            };\r\n        case \"INCREASE\":\r\n            state.cartItems[\r\n                state.cartItems.findIndex((item) => item.id === action.payload.id)\r\n                ].amountChosen++;\r\n            handleChangeAmountItem(action.payload.id, action.payload.amountChosen);\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems],\r\n            };\r\n        case \"DECREASE\":\r\n           state.cartItems[\r\n                state.cartItems.findIndex((item) => item.id === action.payload.id)\r\n                ].amountChosen--;\r\n            handleChangeAmountItem(action.payload.id,action.payload.amountChosen );\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems],\r\n            };\r\n        case \"CHANGE_SIZE\":\r\n            state.cartItems[\r\n                state.cartItems.findIndex((item) => item.id === action.payload.id)\r\n                ].measurement=action.payload.measurement;\r\n            handleChangeSizeItem(action.payload.id,action.payload.measurement );\r\n\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems],\r\n            };\r\n        case \"CHECKOUT\":\r\n            return {\r\n                cartItems: [],\r\n                checkout: true,\r\n                ...sumItems([]),\r\n            };\r\n        case \"CLEAR\":\r\n            return {\r\n                cartItems: [],\r\n                ...sumItems([]),\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { createContext, useReducer, use } from \"react\";\r\nimport { CartReducer, sumItems } from \"../reducers/CartReducer\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst storage = localStorage.getItem(\"cart\")\r\n    ? JSON.parse(localStorage.getItem(\"cart\"))\r\n    : [];\r\nconst initialState = {\r\n    cartItems: storage,\r\n    ...sumItems(storage),\r\n    checkout: false\r\n};\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(CartReducer, initialState);\r\n\r\n    const increase = payload => {\r\n        dispatch({ type: \"INCREASE\", payload });\r\n    };\r\n\r\n    const decrease = payload => {\r\n        dispatch({ type: \"DECREASE\", payload });\r\n    };\r\n    const changeAmount = payload => {\r\n        dispatch({ type: \"CHANGE_AMOUNT\", payload });\r\n    };const changeSize = payload => {\r\n        dispatch({ type: \"CHANGE_SIZE\", payload });\r\n    };\r\n    const addingPoster = (payload ,measurement)=> {\r\n        dispatch({ type: \"ADD_ITEM\", payload ,measurement});\r\n    };\r\n\r\n    const removePoster = payload => {\r\n        dispatch({ type: \"REMOVE_ITEM\", payload });\r\n    };\r\n\r\n    const clearCart = () => {\r\n        dispatch({ type: \"CLEAR\" });\r\n    };\r\n\r\n    const handleCheckout = () => {\r\n        console.log(\"CHECKOUT\", state);\r\n        dispatch({ type: \"CHECKOUT\" });\r\n    };\r\n\r\n    const contextValues = {\r\n        removePoster,\r\n        addingPoster,\r\n        increase,\r\n        decrease,\r\n        changeAmount,\r\n        changeSize,\r\n        clearCart,\r\n        handleCheckout,\r\n        ...state\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={contextValues}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../../contexts/CartContext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nconst PosterViewInCart=(props) => {\r\n    const { increase, decrease ,removePoster} = useContext(CartContext);\r\nconst renderCartImage = (images) => {\r\n    if(images&&images.length > 0) {\r\n        let image = images[0];\r\n        return image\r\n    }\r\n};\r\n\r\nconst renderItems = () => (\r\n    props.products && props.products.map(poster => (\r\n        <tr key={poster.posterId}>\r\n            <td>\r\n                <img style={{ width: '70px' }} alt=\"poster\"\r\n                     src={renderCartImage(poster.img)} />\r\n            </td>\r\n            <td>{poster.amountChosen} </td>\r\n            <td>$ {poster.price} </td>\r\n            <td>{poster.measurementChosen} </td>\r\n            <td><IconButton\r\n                onClick={()=> removePoster(poster)}\r\n            ><DeleteIcon/> </IconButton> </td>\r\n            <IconButton aria-label=\"add\" onClick={() => increase(poster)}>\r\n                <AddCircleOutlinedIcon />\r\n            </IconButton>\r\n\r\n            {poster.amountChosen > 1 && (\r\n                <IconButton aria-label=\"delete\" onClick={() => decrease(poster)}>\r\n                    <RemoveCircleIcon />\r\n                </IconButton>\r\n            )}\r\n        </tr>\r\n    ))\r\n);\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Poster Image</th>\r\n                <th>Poster Quantity</th>\r\n                <th>Poster Price</th>\r\n                <th>Remove from Cart</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {renderItems()}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n)\r\n};\r\nexport default PosterViewInCart;\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         maxWidth: 345,\r\n//     },\r\n//     media: {\r\n//         height: 0,\r\n//         paddingTop: \"80.25%\", // 16:9\r\n//     },\r\n//     expand: {\r\n//         transform: \"rotate(0deg)\",\r\n//         marginLeft: \"auto\",\r\n//         transition: theme.transitions.create(\"transform\", {\r\n//             duration: theme.transitions.duration.shortest,\r\n//         }),\r\n//     },\r\n//     expandOpen: {\r\n//         transform: \"rotate(180deg)\",\r\n//     },\r\n//     avatar: {\r\n//         backgroundColor: red[500],\r\n//     },\r\n// }));\r\n// const PosterViewInCart=({ poster }) => {\r\n//     const { increase, decrease, removePoster } = useContext(CartContext);\r\n//     const theme = useTheme();\r\n//     return (\r\n//         <div className=\"row no-gutters py-2 \">\r\n//             <div className=\"col-sm-2 p-2\">\r\n//                 {poster !== undefined && poster.img !== undefined && (\r\n//                     <img\r\n//                         style={{ margin: \"0 auto\", maxHeight: \"50px\" }}\r\n//                         src={poster.img}\r\n//                         className=\"img-fluid d-block\"\r\n//                     />\r\n//                 )}\r\n//             </div>\r\n//             <div className=\"col-sm-4 p-2\">\r\n//                 <h5 className=\"mb-1\">{poster.name}</h5>\r\n//                 <p className=\"mb-1\">Price: {poster.price} </p>\r\n//             </div>\r\n//             <div className=\"col-sm-2 p-2 text-center \">\r\n//                 <p className=\"mb-0\">Quantity: {poster.amountChosen}</p>\r\n//             </div>\r\n//             <div className=\"col-sm-4 p-2 text-right\">\r\n//                 <IconButton aria-label=\"add\" onClick={() => increase(poster)}>\r\n//                     <AddCircleOutlinedIcon />\r\n//                 </IconButton>\r\n//\r\n//                 {poster.amountChosen > 1 && (\r\n//                     <IconButton aria-label=\"delete\" onClick={() => decrease(poster)}>\r\n//                         <RemoveCircleIcon />\r\n//                     </IconButton>\r\n//                 )}\r\n//\r\n//                 {poster.amountChosen === 1 && (\r\n//                     <IconButton\r\n//                         aria-label=\"delete\"\r\n//                         onClick={() => removePoster(poster)}\r\n//                     >\r\n//                         <DeleteIcon />\r\n//                     </IconButton>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n","import React, { useContext } from \"react\";\r\n import Paypal from '../../helpers/Paypal';\r\nimport PosterViewInCart from \"./posterViewInCart\";\r\nimport { CartContext } from \"../../contexts/CartContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport makeToast from \"../../Toaster\";\r\nimport Empty from \"antd/es/empty\";\r\nimport Result from \"antd/es/result\";\r\nimport Button from \"antd/es/button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    fullScreen: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n}));\r\n\r\nconst Cart = () => {\r\n    //const classes = useStyles();\r\n    const {\r\n        cartItems,\r\n        itemCount,\r\n        clearCart,\r\n        checkout,\r\n        handleCheckout,\r\n        totalPrice,\r\n    } = useContext(CartContext);\r\n    const [email] = React.useState(\r\n        sessionStorage.getItem(\"userEmail\")\r\n    );\r\n    function onCheckout(){\r\n        var data={\r\n            email:email,\r\n            totalPrice:totalPrice\r\n        };\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"/add_order\",\r\n            data: data,\r\n        })\r\n            .done(function(data) {})\r\n            .fail(function(jqXhr) {});\r\n        handleCheckout();\r\n    }\r\n\r\n    const [showSuccess, setShowSuccess] = React.useState(false);\r\n   // const [showTotal, setShowTotal] = React.useState(false)\r\n\r\n    const transactionSuccess = (data) => {\r\n                    onCheckout();\r\n                    setShowSuccess(true);\r\n                    //setShowTotal(false);\r\n                    clearCart();\r\n\r\n    };\r\n\r\n    const transactionError = () => {\r\n        console.log('Paypal error')\r\n    };\r\n\r\n    const transactionCanceled = () => {\r\n        console.log('Transaction canceled')\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1>Cart</h1>\r\n            <div>\r\n\r\n                <PosterViewInCart\r\n                    products={cartItems}\r\n                />\r\n                {totalPrice?\r\n                    <div style={{ marginTop: '3rem' }}>\r\n                        <h2>Total price: ${totalPrice} </h2>\r\n                        <h2>Total posters: {itemCount} </h2>\r\n                    </div>\r\n                    :\r\n                    showSuccess ?\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Successfully Purchased Items\"\r\n                        /> :\r\n                        <div style={{\r\n                            width: '100%', display: 'flex', flexDirection: 'column',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <br />\r\n                            <Empty description={false} />\r\n                            <p>No Items In the Cart</p>\r\n\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n\r\n{totalPrice>0&&<Grid xs={2}>\r\n            <Paypal\r\n                toPay={totalPrice}\r\n                onSuccess={transactionSuccess}\r\n                transactionError={transactionError}\r\n                transactionCanceled={transactionCanceled}\r\n            />\r\n            <Button\r\n                type=\"button\"\r\n                className=\"btn btn-outlineprimary btn-sm\"\r\n                onClick={onCheckout}\r\n            >\r\n                Development pay instead of paypal\r\n            </Button> </Grid>}\r\n            <Button\r\n                type=\"button\"\r\n                className=\"btn btn-outlineprimary btn-sm\"\r\n                onClick={clearCart}\r\n            >\r\n                Clear Cart\r\n            </Button>\r\n\r\n\r\n        </div>)\r\n\r\n};\r\n\r\nexport default Cart;\r\n","import $ from \"jquery\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n import {Switch, useHistory,withRouter} from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { useGoogleLogin} from 'react-google-login';\nimport makeToast from \"../../Toaster\";\nimport {sha256} from \"js-sha256\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Login= (props) => {\n    let history = useHistory();\n\n    const [email, setEmail] = React.useState(localStorage.getItem(\"userEmail\"));\n\n    const [password, setPassword] = React.useState(\n        localStorage.getItem(\"password\")\n    );\n    const [fullName, setFullName] = React.useState(\"\");\n    const [checkedRemember, setChecked] = React.useState(\n        JSON.parse(localStorage.getItem(\"checked\"))\n    );\n    const classes = useStyles();\n\n\n    const responseGoogleSuccess = (res) => {\n        console.log('Login Success: currentUser:', res.profileObj);\n        setEmail(res.profileObj.email);\n        setPassword(res.profileObj.googleId);//isn't really necessary\n        setFullName(res.profileObj.name+ ' '+res.profileObj.familyName);\n        console.log(email);\n        $.ajax({\n            type: \"GET\",\n            url: \"/get_user?email=\"+email,\n        })\n            .then(res => {\n                if(res!==undefined){\n                sessionStorage.setItem(\"userCategory\",res.category);\n                sessionStorage.setItem(\"userEmail\", email);\n                localStorage.setItem(\"connectedByGoogle\",\"true\");\n\n                props.setupSocket();\n                if(history.location.state.from===\"checkout\")\n                    history.push('/checkout');\n                else\n                    history.push('/');}\n                else\n                    addUserGoogle();\n            })\n            .catch(addUserGoogle)};\n        function addUserGoogle() {\n            var data = {\n                e_mail: email,\n                password: sha256(password+process.env.SALT_PASSWORD),\n                fullName: fullName};\n            $.ajax({\n                type: \"POST\",\n                url: \"/register\",\n                data\n            })\n                .done(res => {\n                    sessionStorage.setItem(\"userCategory\",\"Customer\");\n                    sessionStorage.setItem(\"userEmail\", email);\n                    localStorage.setItem(\"connectedByGoogle\",\"true\");\n                    props.setupSocket();\n                    if(history.location.state.from===\"checkout\")\n                        history.push('/checkout');\n                    else\n                        history.push('/');\n                })\n                .fail(res => console.log('Register by google to db failed: res:', res));\n        }\n    const responseGoogleFailure = (res) => {\n        console.log('Login failed: res:', res);\n        makeToast(\"error\",\"Could not login, try again!\");\n    };\n\n    const clientId=\"142120254422-j6pkdhtomqv3oqjrcgakbkuv21pk8lk7.apps.googleusercontent.com\";\n    const { googleLogIn } = useGoogleLogin({\n        responseGoogleSuccess,\n        responseGoogleFailure,\n        clientId,\n        isSignedIn: true,\n        accessType: 'offline',\n    });\n\n\n\n    const onChangeEmailHandler = (e) => setEmail(e.target.value);\n    const onChangePasswordHandler = (e) => setPassword(e.target.value);\n    const handleCheckChange = (event) => {\n        setChecked(event.target.checked);\n    };\n    const onSuccess = () => {\nconsole.log(email);\n        $.ajax({\n            type: \"GET\",\n            url: \"/get_user?email=\"+email,\n        })\n            .done(res => {\n                sessionStorage.setItem(\"userCategory\",res.category);\n                sessionStorage.setItem(\"userEmail\", email);\n                localStorage.setItem(\"connectedByGoogle\",\"false\");\n                if (checkedRemember) {\n                    localStorage.setItem(\"userCategory\",res.category);\n                    localStorage.setItem(\"password\", sha256(password+process.env.SALT_PASSWORD));\n                    localStorage.setItem(\"userEmail\", email);\n                    localStorage.setItem(\"checked\", \"true\");\n                } else {\n                    localStorage.setItem(\"userCategory\",\"\");\n                    localStorage.setItem(\"password\", \"\");\n                    localStorage.setItem(\"userEmail\", \"\");\n                    localStorage.setItem(\"checked\", \"false\");\n                }\n                props.setupSocket();\n                if(history.location.state.from===\"checkout\")\n                    history.push('/checkout');\n                else\n                    history.push('/');\n            })\n            .fail(err => {console.log(err); makeToast(\"error\", err.response.data.message);});\n\n    };\n    const onFailure = error => {\n        makeToast(\"error\",\"Could not login, try again!\");\n    };\n    function submitHandler(e) {\n\n\n        e.preventDefault();\n\n        var data = {\n            e_mail: email,\n            password: sha256(password+process.env.SALT_PASSWORD),\n        };\n\n        // Submit form via jQuery/AJAX\n        $.ajax({\n            type: \"POST\",\n            url: \"/login\",\n            data: data,\n        })\n            .done(onSuccess)\n            .fail(onFailure);\n    }\n    function redirectRegister(e) {\n        history.push(\"/register\");\n    }\n   function redirectForgotPassword(e){\n        history.push(\"/forgot_password\");\n   }\n    return (\n        <div>\n            <Grid container component=\"main\" className={classes.root}>\n                <Grid item xs={12} sm={8} md={5} elevation={8} square>\n                                <div className={classes.paper}>\n                                    <br/>\n                                    <br/>\n                                    <Avatar className={classes.avatar}>\n                                        <LockOutlinedIcon/>\n                                    </Avatar>\n                                    <Typography component=\"h1\" variant=\"h5\">\n                                        Login\n                                    </Typography>\n                                    <form\n                                        className={classes.form}\n                                        onSubmit={submitHandler}\n                                        noValidate\n                                    >\n                                        <TextField\n                                            variant=\"outlined\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            id=\"email\"\n                                            label=\"Email Address\"\n                                            name=\"email\"\n                                            autoComplete=\"email\"\n                                            value={email}\n                                            onChange={onChangeEmailHandler}\n                                            autoFocus\n                                        />\n                                        <TextField\n                                            variant=\"outlined\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            value={password}\n                                            name=\"password\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            id=\"password\"\n                                            autoComplete=\"current-password\"\n                                            onChange={onChangePasswordHandler}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    value=\"remember\"\n                                                    checked={checkedRemember}\n                                                    onChange={handleCheckChange}\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"Remember me\"\n                                        />\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            className={classes.submit}\n                                        >\n                                            Login\n                                        </Button>\n                                        <button onClick={googleLogIn} className=\"button\">\n                                            <img src=\"./images/google.svg\" alt=\"google login\" className=\"icon\"/>\n\n                                            <span className=\"buttonText\">Sign in with Google</span>\n                                        </button>\n                                        <Grid container>\n                                            <Grid item xs>\n                                                <Link onClick={redirectForgotPassword}>{\"Forgot password?\"}</Link>\n                                            </Grid>\n                                            <Grid item>\n                                                <Link onClick={redirectRegister}>\n                                                    {\"Don't have an account? Register\"}\n                                                </Link>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\nexport default withRouter(Login);\n","import React, { useEffect, useState } from 'react'\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction PosterImage(props) {\r\n    const [Images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (props.detail.img&& props.detail.img.length > 0) {\r\n            let images = [];\r\n\r\n            props.detail.img.map(item => {\r\n                images.push({\r\n                    original: item,\r\n                    thumbnail: item\r\n                })\r\n            });\r\n            setImages(images)\r\n        }\r\n    }, [props.detail]);\r\n\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosterImage","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../../contexts/CartContext\";\r\nimport PosterImage from '../../components/posterImage';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 30,\r\n    },\r\n    flex:{\r\n        display:'flex'\r\n    },\r\n    card: {\r\n        padding:'24px 40px 40px'\r\n    },\r\n    subheading: {\r\n        margin: '24px',\r\n        color: theme.palette.openTitle\r\n    },\r\n    price: {\r\n        padding: '16px',\r\n        margin: '16px 0px',\r\n        display: 'flex',\r\n        backgroundColor: '#93c5ae3d',\r\n        fontSize: '1.3em',\r\n        color: '#375a53',\r\n    },\r\n    media: {\r\n        height: 200,\r\n        display: 'inline-block',\r\n        width: '50%',\r\n        marginLeft: '24px'\r\n    },\r\n    icon: {\r\n        verticalAlign: 'sub'\r\n    },\r\n    link:{\r\n        color: '#3e4c54b3',\r\n        fontSize: '0.9em'\r\n    },\r\n    addCart: {\r\n        width: '35px',\r\n        height: '35px',\r\n        padding: '10px 12px',\r\n        borderRadius: '0.25em',\r\n        backgroundColor: '#5f7c8b'\r\n    },\r\n    action: {\r\n        margin: '8px 24px',\r\n        display: 'inline-block'\r\n    }\r\n}));\r\n\r\nexport default function PosterViewInShop({ poster, renderStore }) {\r\n    let history = useHistory();\r\n    const [liked, setLiked] = React.useState(false);\r\n    const handlePosterLiked = () => {\r\n        var data = {\r\n            email: sessionStorage.getItem(\"userEmail\"),\r\n            posterId: poster.id,\r\n            state: !liked,\r\n        };\r\n\r\n        if (liked && renderStore !== undefined) {\r\n            renderStore(poster);\r\n        } else {\r\n            setLiked(!liked);\r\n        }\r\n\r\n        // Submit form via jQuery/AJAX\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"/update_liked\",\r\n            data: data,\r\n        })\r\n            .done(function(data) {})\r\n            .fail(function(jqXhr) {});\r\n\r\n        //here we need to update  the db (send a request to the server in order to update this user's product is saved )\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    function ViewPosterItemHandler(e) {\r\n        //var self;\r\n        e.preventDefault();\r\n         history.push(\"/poster/\"+poster._id);\r\n    }\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <Grid container spacing={10}>\r\n            <Grid item xs={7} sm={7}>\r\n                    <Card className={classes.card}>\r\n                        <CardHeader\r\n                            title={poster.name}\r\n                            subheader={poster.amount <= 0?'Out of Stock':null }\r\n                        />\r\n                        <div className={classes.flex}>\r\n                            {poster !== undefined && poster.img !== undefined && (\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    src={poster.img}\r\n                                    title=\"\"\r\n                                />\r\n                            )}\r\n                            <Typography component=\"p\" variant=\"subtitle1\" className={classes.subheading}>\r\n                                {poster.name}<br/>\r\n                                <span className={classes.price}>$ {poster.price}</span>\r\n                                <CardActions disableSpacing>\r\n                                    <IconButton\r\n                                        aria-label=\"add to favorites\"\r\n                                        onClick={handlePosterLiked}\r\n                                    >\r\n                                        {!liked && <FavoriteBorderIcon />}\r\n                                        {liked && <FavoriteIcon />}\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                        aria-label=\"preview\"\r\n                                        onClick={ViewPosterItemHandler}\r\n                                    >\r\n                                        <VisibilityIcon />\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                            </Typography>\r\n\r\n                        </div>\r\n                    </Card>\r\n                </Grid>\r\n                {poster.tagList.length > 0 &&\r\n                (<Grid item xs={5} sm={5}>\r\n                    <List  items={poster.tagList} title='Tags'/>\r\n                </Grid>)}\r\n            </Grid>\r\n        </div>);\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport PosterViewInShop from \"./../Store/posterViewInShop\";\r\n//import { ProductsContext } from \"../../contexts/ProductsContext\";\r\n//import styles from './ProductsGrid.module.scss';\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n\r\n}));\r\n\r\nconst Liked = () => {\r\n    const classes = useStyles();\r\n\r\n    const [posters, postersSet] = React.useState([]);\r\n    React.useEffect(() => {\r\n        async function fetchPosters() {\r\n            const fullResponse = await fetch(\r\n                \"/get_liked_items?email=\" + sessionStorage.getItem(\"userEmail\")\r\n            );\r\n            const responseJson = await fullResponse.json();\r\n            postersSet(responseJson);\r\n\r\n        }\r\n\r\n        fetchPosters().then(r => console.log(\"got\"));\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <main>\r\n                <div className={classes.heroContent}>\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h2\"\r\n                            align=\"center\"\r\n                            color=\"textPrimary\"\r\n                            gutterBottom\r\n                        >\r\n                            Liked Posters\r\n                        </Typography>\r\n                    </Container>\r\n                </div>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n\r\n                    <Grid container spacing={4}>\r\n                        {posters!==undefined&&posters.length>0?(posters.filter((poster) => poster.liked === true).map((poster, index) => (\r\n                            <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                <PosterViewInShop key={index} poster={poster} />\r\n                            </Grid>\r\n                        ))):null}\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Liked;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport img from \"../../components/components_images/mountain_for_logo.jpg\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    card: {},\r\n    mainFeaturedPost: {\r\n        position: \"relative\",\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: `url(${img})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        // backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n        //backdropFilter: \"brightness(120%)\",\r\n    },\r\n    overlay: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: \"rgba(0,0,0,.3)\",\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: \"relative\",\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: theme.spacing(6),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Contact() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Paper className={classes.mainFeaturedPost}>\r\n                {/* Increase the priority of the hero background image */}\r\n\r\n                <div className={classes.overlay} />\r\n                <Grid container>\r\n                    <Grid item md={6}>\r\n                        <div className={classes.mainFeaturedPostContent}>\r\n                            <Typography variant=\"h3\" color=\"inherit\">\r\n                                Contact Us\r\n                            </Typography>\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Card variant=\"outlined\" className={classes.card}>\r\n                <Container component=\"main\" maxWidth=\"s\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n                        <br />\r\n                        <form className={classes.form} noValidate>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        autoComplete=\"name\"\r\n                                        name=\"Name\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"Name\"\r\n                                        label=\"Name\"\r\n                                        autoFocus\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        multiline\r\n                                        rows={7}\r\n                                        name=\"WriteToUs\"\r\n                                        label=\"Write To Us\"\r\n                                        id=\"WriteToUs\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Send\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport PosterViewInShop from \"./posterViewInShop\";\r\n//import { ProductsContext } from \"../../contexts/ProductsContext\";\r\n//import styles from './ProductsGrid.module.scss';\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n\r\n}));\r\n\r\nconst Store = () => {\r\n    const classes = useStyles();\r\n\r\n    const [posters, postersSet] = React.useState([]);\r\n    const [postersToShow, postersToShowSet] = React.useState([]);\r\n    const [genre, setGenre] = React.useState(\"all\");\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n\r\n    const handleChangeGenre = (event) => {\r\n        setGenre(event.target.value);\r\n        console.log(event.target.value);\r\n        switch (event.target.value) {\r\n            case \"all\":\r\n                break;\r\n            case \"vehicle\":\r\n                postersToShow.filter((a) =>{\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"vehicle\") === -1;});\r\n                break;\r\n            case \"view\":\r\n                postersToShow.filter(function(a) {\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"view\") === -1;});\r\n                break;\r\n            case \"people\":\r\n                postersToShow.filter(function(a) {\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"people\") === -1;});\r\n                break;\r\n            case \"music\":\r\n                postersToShow.filter(function(a) {\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"music\") === -1;});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSearchChange = (event, newInputValue) => {\r\n        setSearchValue(newInputValue);\r\n        console.log(newInputValue);\r\n        if (newInputValue !== \"\" && newInputValue !== null) {\r\n            let index = posters.findIndex((item) => {\r\n                return item.name === newInputValue;\r\n            });\r\n            console.log(index);\r\n            if (index !== -1) {\r\n                postersToShowSet([posters[index]]);\r\n                console.log(\"change\", posters);\r\n            }\r\n        } else {\r\n            postersToShowSet(posters);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        async function fetchPosters() {\r\n            const fullResponse = await fetch(\r\n                \"/get_posters\"\r\n            );\r\n            const responseJson = await fullResponse.json();\r\n            postersSet(responseJson);\r\n            postersToShowSet(responseJson);\r\n        }\r\n\r\n        fetchPosters().then(r => console.log(\"got\"));\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <main>\r\n                <div className={classes.heroContent}>\r\n                    <h1>Shop</h1>\r\n                    <Container maxWidth=\"sm\">\r\n                        <div className={classes.heroButtons}>\r\n                            <Grid container spacing={2} justifyContent=\"center\">\r\n                                <Grid item>\r\n                                    <div style={{ width: 300 }}>\r\n                                        <Autocomplete\r\n                                            value={searchValue}\r\n                                            onChange={handleSearchChange}\r\n                                            options={posters.map((option) => option.name)}\r\n                                            renderInput={(params) => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label=\"Search\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel id=\"demo-simple-select-autowidth-label\">\r\n                                            Genre\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-autowidth-label\"\r\n                                            id=\"demo-simple-select-autowidth\"\r\n                                            defaultValue={0}\r\n                                            value={genre}\r\n                                            onChange={handleChangeGenre}\r\n                                            autoWidth\r\n                                        >\r\n                                            <MenuItem value={\"all\"}>All</MenuItem>\r\n                                            <MenuItem value={\"vehicle\"}>Vehicle</MenuItem>\r\n                                        <MenuItem value={\"people\"}>People</MenuItem>\r\n                                        <MenuItem value={\"view\"}>View</MenuItem>\r\n                                        <MenuItem value={\"music\"}>Music</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n\r\n                        {postersToShow !== undefined &&\r\n                        postersToShow.map((poster, index) => (\r\n                            <Grid item key={index}>\r\n                                <PosterViewInShop key={index} poster={poster} />\r\n                            </Grid>))}\r\n                </Container>\r\n            </main>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Store;\r\n","import React, {Component} from 'react';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default function UpdateUserDetails() {\r\n    function FinishedEditHandler(e) {\r\n        console.log(\"edited\");\r\n    }\r\n        return (\r\n            <div>\r\n              hi\r\n            </div>\r\n        );\r\n\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport OrderListItem from \"../../components/orderListItem\";\r\n//import { ProductsContext } from \"../../contexts/ProductsContext\";\r\n//import styles from './ProductsGrid.module.scss';\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst OrderList = () => {\r\n    const classes = useStyles();\r\n\r\n    const [orders, ordersSet] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        async function fetchOrders() {\r\n            const fullResponse = await fetch(\r\n                \"/get_orders\"\r\n            );\r\n            const responseJson = await fullResponse.json();\r\n            ordersSet(responseJson);\r\n        }\r\n\r\n        fetchOrders().then(r => console.log(\"got\"));\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <main>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    <Grid container spacing={4}>\r\n                        {orders !== undefined &&\r\n                        orders.map((order, index) => (\r\n                            <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                <OrderListItem key={index} order={order} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Descriptions } from 'antd';\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nfunction PosterInfo(props) {\r\n\r\n    const [poster, setPoster] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        setPoster(props.detail)\r\n\r\n    }, [props.detail]);\r\n\r\n    const deleteHandler = () => {\r\n        props.deletePoster(props.detail._id)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions title={poster.creator}>\r\n                <Descriptions.Item label=\"Price\"> {poster.price}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Amount\">{poster.amount}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Tags\"> {poster.tagList!==undefined&&poster.tagList!==[]?poster.tagList.map((s)=>(<Chip key={s} label={s}/>)):null}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Sizes\">  {poster.sizeList!==undefined&&poster.tagList!==[]?poster.sizeList.map((s)=>(<Chip key={s} label={s}/>)):null}</Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button size=\"large\" shape=\"round\"\r\n                        onClick={deleteHandler}\r\n                >\r\n                    <DeleteIcon/>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosterInfo\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../../contexts/CartContext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PosterImage from \"../../components/posterImage\";\r\nimport Col from \"antd/es/grid/col\";\r\nimport Row from \"antd/es/descriptions/Row\";\r\nimport PosterInfo from \"../../components/posterInfo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"80.25%\", // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function PosterViewInStock({ poster, renderStock }) {\r\n    let history = useHistory();\r\n    const redirectPosterEdit = () => {\r\n        history.push(\"poster_edit\");\r\n    };\r\n    const handlePosterDelete = () => {\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"/delete_poster?id=\"+poster._id,\r\n        })\r\n            .done(function(data) {\r\n                renderStock(poster._id);\r\n            })\r\n            .fail(function(jqXhr) {});\r\n    };\r\n    const classes = useStyles();\r\n\r\n    function handlePosterEdit(e) {\r\n        //var self;\r\n        e.preventDefault();\r\n         history.push(\"/poster_edit?id=\"+poster._id);\r\n    }\r\n    return (\r\n        <div className=\"postPage\" style={{ width: '100%', padding: '3rem 4rem' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <h1>{poster.name}</h1>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <Grid gutter={[16, 16]}>\r\n                <Col lg={12} xs={24}>\r\n                    <img src={poster.img}  alt=\"\"/>\r\n                </Col>\r\n                <Col lg={12} xs={24}>\r\n                      <PosterInfo\r\n                        deletePoster={handlePosterDelete}\r\n                        detail={poster} />\r\n                </Col>\r\n            </Grid>\r\n        </div>\r\n    );\r\n   /* return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                title={poster.name}\r\n                subheader={poster.creator}\r\n            />\r\n\r\n            {poster !== undefined && poster.img !== undefined && (\r\n                <PosterImage detail={poster}/>\r\n            )}\r\n            <CardContent>\r\n               {poster.price}\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <Grid>\r\n                    {/* <IconButton\r\n                    aria-label=\"Edit\"\r\n                    onClick={handlePosterEdit}\r\n                >\r\n                    <EditIcon/>\r\n                </IconButton>}\r\n                <IconButton\r\n                    aria-label=\"Delete\"\r\n                    onClick={handlePosterDelete}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card>\r\n    );*/\r\n\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport PosterViewInStock from \"./posterViewInStock\";\r\n//import { ProductsContext } from \"../../contexts/ProductsContext\";\r\n//import styles from './ProductsGrid.module.scss';\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FullHeartIcon from \"@material-ui/icons/Favorite\";\r\nimport BorderHeartIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n\r\n}));\r\n\r\nconst Stock = () => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [posters, postersSet] = React.useState([]);\r\n    const [postersToShow, postersToShowSet] = React.useState([]);\r\n    const [genre, setGenre] = React.useState(\"all\");\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n\r\n    const handleChangeGenre = (event) => {\r\n        setGenre(event.target.value);\r\n        console.log(event.target.value);\r\n        switch (event.target.value) {\r\n            case \"all\":\r\n                break;\r\n            case \"vehicle\":\r\n                postersToShow.filter((a) =>{\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"vehicle\") === -1;});\r\n                break;\r\n            case \"view\":\r\n                postersToShow.filter(function(a) {\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"view\") === -1;});\r\n                break;\r\n            case \"people\":\r\n                postersToShow.filter(function(a) {\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"people\") === -1;});\r\n                break;\r\n            case \"music\":\r\n                postersToShow.filter(function(a) {\r\n                    return a.tagList!==[]&&a.tagList.findIndex((item) => item === \"music\") === -1;});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSearchChange = (event, newInputValue) => {\r\n        setSearchValue(newInputValue);\r\n        console.log(newInputValue);\r\n        if (newInputValue !== \"\" && newInputValue !== null) {\r\n            let index = posters.findIndex((item) => {\r\n                return item.name === newInputValue;\r\n            });\r\n            console.log(index);\r\n            if (index !== -1) {\r\n                postersToShowSet([posters[index]]);\r\n                console.log(\"change\", posters);\r\n            }\r\n        } else {\r\n            postersToShowSet(posters);\r\n        }\r\n    };\r\n    const handleAddPoster = (event) => {\r\n        event.preventDefault();\r\n        history.push(\"/add_poster\");\r\n    };\r\n    React.useEffect(() => {\r\n        async function fetchPosters() {\r\n            const fullResponse = await fetch(\r\n                \"/get_posters\");\r\n            const responseJson = await fullResponse.json();\r\n            postersSet(responseJson);\r\n            postersToShowSet(responseJson);\r\n        }\r\n\r\n        fetchPosters();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <main>\r\n                <div className={classes.heroContent}>\r\n                    <h1>Stock</h1>\r\n                    <Container maxWidth=\"sm\">\r\n                        <div className={classes.heroButtons}>\r\n                            <Grid container spacing={2} justifyContent=\"center\">\r\n                                <Grid item>\r\n                                    <div style={{ width: 300 }}>\r\n                                        <IconButton\r\n                                            onClick={handleAddPoster}\r\n                                            style={{maxWidth: \"130px\", maxHeight: \"30px\"}}\r\n                                        >\r\n                                            <AddIcon/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div style={{ width: 300 }}>\r\n                                        <Autocomplete\r\n                                            value={searchValue}\r\n                                            onChange={handleSearchChange}\r\n                                            options={posters!==undefined&&posters.map((option) => option.name)}\r\n                                            renderInput={(params) => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label=\"Search\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel id=\"demo-simple-select-autowidth-label\">\r\n                                            Genre\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-autowidth-label\"\r\n                                            id=\"demo-simple-select-autowidth\"\r\n                                            defaultValue={0}\r\n                                            value={genre}\r\n                                            onChange={handleChangeGenre}\r\n                                            autoWidth\r\n                                        >\r\n                                            <MenuItem value={\"all\"}>All</MenuItem>\r\n                                            <MenuItem value={\"vehicle\"}>Vehicle</MenuItem>\r\n                                            <MenuItem value={\"people\"}>People</MenuItem>\r\n                                            <MenuItem value={\"view\"}>View</MenuItem>\r\n                                            <MenuItem value={\"music\"}>Music</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    <Grid container spacing={4}>\r\n                        {postersToShow !== undefined &&\r\n                        postersToShow.map((poster, index) => (\r\n                            <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                <PosterViewInStock key={index} poster={poster} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Stock;\r\n","import React, { useContext } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { CartContext } from \"../../contexts/CartContext\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nimport ButtonUp from \"@material-ui/core/Button\";\r\nimport FullHeartIcon from \"@material-ui/icons/Favorite\";\r\nimport BorderHeartIcon from \"@material-ui/icons/FavoriteBorder\";\r\n//import { SketchPicker } from \"react-color\";\r\n\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import Avatar from \"@material-ui/core/Avatar\";\r\nimport $ from \"jquery\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\n//import Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport makeToast from \"../../Toaster\";\r\nimport PosterImage from \"../../components/posterImage\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        \"& > * + *\": {\r\n            marginTop: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nfunction generate(element, listItem) {\r\n    return listItem.map((value) =>\r\n        React.cloneElement(element, {\r\n            key: value,\r\n        })\r\n    );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(5),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n    price: {\r\n        color: theme.palette.error.main,\r\n    },\r\n});\r\nclass PosterData extends React.Component {\r\n    static contextType = CartContext;\r\n\r\n    constructor({match}) {\r\n        super();\r\n        this.params = match.params;\r\n\r\n        this.state = {\r\n            full: 0,\r\n            poster: {},\r\n            measurement:\"\"\r\n        };\r\n        this.handleHeartClick = this.handleHeartClick.bind(this);\r\n        this.handleMeasurement=this.handleMeasurement.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const resp = await fetch(\"/get_poster?id=\" + this.params.posterId);\r\n            if (!resp.ok) {\r\n                throw Error(resp.statusText);\r\n            }\r\n            const poster = await resp.json();\r\n            this.setState({poster: poster});\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n   handleHeartClick() {\r\n        const {full} = this.state;\r\n        if (full) this.setState({full: 0});\r\n        else this.setState({full: 1});\r\n    }\r\n    handleMeasurement(e) {\r\n        this.setState({measurement:e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const cartContext = this.context;\r\n        const {classes} = this.props;\r\n        const {\r\n            full,\r\n            poster,\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"text-center mt-5\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}/>\r\n                        <Grid item xs={12}></Grid>\r\n                        <img src={poster.img}/>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"age-native-simple\">Size</InputLabel>\r\n                        <Select\r\n                            native\r\n                            value={this.state.measurement}\r\n                            onChange={this.state.handleMeasurement}\r\n                            inputProps={{\r\n                                name: 'size',\r\n                                id: 'age-native-simple',\r\n                            }}>\r\n                            { poster.sizeList?poster.sizeList.map(s=><option value={s}>{s}</option>):null}\r\n                        </Select>\r\n                        </FormControl>\r\n                        <Grid item xs={3} className=\"text-left ml-5\">\r\n                            <Grid container direction=\"column\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item>\r\n                                        <Typography gutterBottom variant=\"h3\">\r\n                                            {poster.name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} className=\"mt-3\">\r\n                                        <Typography gutterBottom variant=\"h5\">\r\n                                            {poster.creator}\r\n                                        </Typography>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography\r\n                                        variant=\"h5\"\r\n                                        gutterBottom\r\n                                        className={classes.price}\r\n                                    >\r\n                                        {poster.price}$\r\n                                    </Typography>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <br/>\r\n                                </Grid>\r\n\r\n                                <Grid item xs container>\r\n                                    <ButtonUp\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        style={{maxWidth: \"160px\", maxHeight: \"30px\"}}\r\n                                        onClick={() => {cartContext.addingPoster(poster,this.state.measurement)}}\r\n                                    >\r\n                                        Add to cart\r\n                                    </ButtonUp>\r\n                                     <IconButton\r\n                                        onClick={this.handleClick}\r\n                                        style={{maxWidth: \"130px\", maxHeight: \"30px\"}}\r\n                                    >\r\n                                        {full ? <FullHeartIcon/> : <BorderHeartIcon/>}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <br/>\r\n                                <br/>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n                                <Typography className={classes.heading}>\r\n                                    Tags\r\n                                </Typography>\r\n                            </div>\r\n                            <List>\r\n                                {poster.tagList !== undefined &&\r\n                                poster.tagList.map((item, index) => {\r\n                                    return (\r\n                                        <ListItemText\r\n                                            tag={item}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </List>\r\n                        </Grid>\r\n                         <Grid item xs={12} sm={6} >\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(PosterData);\r\n","import React from \"react\";\r\n\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\n\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {red} from \"@material-ui/core/colors\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport List from \"@material-ui/core/List\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    }\r\n}));\r\nexport default function AccountDetailsAdmin({user}) {\r\n\r\n\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const EditUserItemHandler=(e)=>{\r\n        e.preventDefault();\r\n        history.push(\"/user_edit\");\r\n    };\r\n    return (\r\n        <Card>\r\n            <Card.Content>\r\n                <Card.Header>{user.fullName?user.fullName:\"\"}</Card.Header>\r\n                <Card.Meta>{user.category?user.category:\"\"}</Card.Meta>\r\n                <Card.Description>\r\n                     <List>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <MailOutlineIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"Email\" secondary={user.e_mail?user.e_mail:\"\"} />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <PhoneIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"Phone\" secondary={user.phone?user.phone:\"\"} />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <PublicIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"Address\" secondary={user.address?user.address:\"\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <CardActions disableSpacing>\r\n                <IconButton\r\n                    aria-label=\"Edit\"\r\n                    onClick={EditUserItemHandler}>\r\n                    <EditIcon/>\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Card, Feed } from 'semantic-ui-react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\nimport AccountDetailsAdmin from \"./accountDetailsAdmin\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n\r\n}));\r\n\r\nconst UserData = () => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const [users, usersSet] = React.useState([]);\r\n    const [usersToShow, usersToShowSet] = React.useState([]);\r\n    const [role, setRole] = React.useState(\"All\");\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n\r\n    const handleChangeRole = (event) => {\r\n        setRole(event.target.value);\r\n        if(role!==\"All\")\r\n                usersToShowSet(users.filter(function(a) {\r\n                    return a.category!==\"\"&&a.category === role;}));\r\n        else\r\n            usersToShowSet(users);\r\n\r\n    };\r\n\r\n    const handleSearchChange = (event, newInputValue) => {\r\n        setSearchValue(newInputValue);\r\n        if (newInputValue !== \"\" && newInputValue !== null) {\r\n            let index = users.findIndex((item) => {\r\n                return item.fullName === newInputValue;\r\n            });\r\n            if (index !== -1) {\r\n                usersToShowSet([users[index]]);\r\n            }\r\n        } else {\r\n            usersToShowSet(users);\r\n        }\r\n    };\r\n    const handleAddUser = (event) => {\r\n        event.preventDefault();\r\n        history.push(\"/add_user\");\r\n    };\r\n    React.useEffect(() => {\r\n        async function fetchUsers() {\r\n            const fullResponse = await fetch(\r\n                \"/get_users\"\r\n            );\r\n            const responseJson = await fullResponse.json();\r\n            usersSet(responseJson);\r\n            usersToShowSet(responseJson);\r\n        }\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <h1>Cart</h1>\r\n            <CssBaseline />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <main>\r\n                <div className={classes.heroContent}>\r\n                    <Card.Group maxWidth=\"sm\">\r\n                        <div className={classes.heroButtons}>\r\n                            <Grid container spacing={2} justifyContent=\"center\">\r\n                                <Grid item>\r\n                                    <div style={{ width: 300 }}>\r\n                                        <IconButton\r\n                                            onClick={handleAddUser}\r\n                                            style={{maxWidth: \"130px\", maxHeight: \"30px\"}}\r\n                                        >\r\n                                            <AddIcon/>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div style={{ width: 300 }}>\r\n                                        <Autocomplete\r\n                                            value={searchValue}\r\n                                            onChange={handleSearchChange}\r\n                                            options={users.map((option) => option.fullName)}\r\n                                            renderInput={(params) => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label=\"Search\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel id=\"demo-simple-select-autowidth-label\">\r\n                                            Role\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-autowidth-label\"\r\n                                            id=\"demo-simple-select-autowidth\"\r\n                                            defaultValue={0}\r\n                                            value={role}\r\n                                            onChange={handleChangeRole}\r\n                                            autoWidth\r\n                                        >\r\n                                            <MenuItem value={\"All\"}>All</MenuItem>\r\n                                            <MenuItem value={\"Employee\"}>Employee</MenuItem>\r\n                                            <MenuItem value={\"Customer\"}>Customer</MenuItem>\r\n                                            <MenuItem value={\"Admin\"}>Admin</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Card.Group>\r\n                </div>\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n\r\n                    <Grid container spacing={4}>\r\n                        {usersToShow !== undefined &&\r\n                        usersToShow.map((user, index) => (\r\n                            <Grid item key={index} xs={12} sm={6} md={4}>\r\n                                <AccountDetailsAdmin key={index} user={user} />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserData;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\n\nconst GroupsMenu = (props) => {\n    const [chatrooms, setChatrooms] = React.useState([]);\n    const [email] = React.useState(sessionStorage.getItem(\"userEmail\"));\n    const [category] = React.useState(sessionStorage.getItem(\"userCategory\"));\n\n    const nameRef = React.createRef();\n    const getChatrooms = () => {\n        axios\n            .get(\"/get_chatrooms\" //{\n                //headers: {\n                 //   Authorization: \"Bearer \" + sessionStorage.getItem(\"userCategory\"),\n               // },\n           // }\n            )\n            .then((response) => {\n                setChatrooms(response.data);\n            })\n            .catch((err) => {\n                setTimeout(getChatrooms, 3000);\n            });\n    };\n\n    React.useEffect(() => {\n        getChatrooms();\n        // eslint-disable-next-line\n    }, []);\n    const registerChatroom = (props) => {\n        const name = nameRef.current.value;\n\n        axios\n            .post(\"/add_chatroom\", {\n                headers: {\n                    authorization: email+\" \"+category,\n                },\n                name,\n            })\n            .then((response) => {\n\n                getChatrooms();\n\n                console.log(\"success\");\n            })\n            .catch((err) => {\n                 console.log(err);\n                if (\n                    err &&\n                    err.response &&\n                    err.response.data &&\n                    err.response.data.message\n                )\n                    console.log(\"error\");\n            });\n    };\n\n    return (\n        <div className=\"card\">\n            <div className=\"cardHeader\">Chatrooms</div>\n            <div className=\"cardBody\">\n                <div className=\"inputGroup\">\n                    <label htmlFor=\"chatroomName\">Chatroom Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"chatroomName\"\n                        id=\"chatroomName\"\n                        placeholder=\"ChatterBox Nepal\"\n                        ref={nameRef}\n                    />\n                </div>\n            </div>\n            {category===\"Admin\"? <button onClick={registerChatroom}>Create Chatroom</button>:null}\n            <div className=\"chatrooms\">\n                {chatrooms.map((chatroom) => (\n                    <div key={chatroom._id} className=\"chatroom\">\n                        <div>{chatroom.name}</div>\n                        <Link to={\"/chatroom/\" + chatroom._id}>\n                            <div className=\"join\">Join</div>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default GroupsMenu;\n","import React from \"react\";\nimport {useHistory, withRouter} from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Dropdown} from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport PosterViewInShop from \"../Store/posterViewInShop\";\nimport MessageView from \"./messageView\";\n\nconst Chatroom = ({ match, socket }) => {\n  let history = useHistory();\n\n  const chatroomId = match.params.id;\n  const [messages, setMessages] = React.useState([]);\n  const messageRef = React.useRef();\n  const [userEmail, setUserEmail] = React.useState(\"\");\n  const [like, setLike] = React.useState(false);\n  const [unlike, setUnlike] = React.useState(false);\n\n  const sendMessage = () => {\n    if (socket) {\n      socket.emit(\"chatroomMessage\", {\n        chatroomId,\n        message: messageRef.current.value,\n      });\n\n      messageRef.current.value = \"\";\n    }\n  };\n\n  React.useEffect(() => {\n    const userEmail = sessionStorage.getItem(\"userEmail\");\n    if (userEmail) {\n      setUserEmail(userEmail);\n    }\n    if (socket) {\n      socket.on(\"newMessage\", (message) => {\n        const newMessages = [...messages, message];\n        setMessages(newMessages);\n      });\n    }\n    //eslint-disable-next-line\n  }, [messages]);\n\n  React.useEffect(() => {\n    if (socket) {\n      socket.emit(\"joinRoom\", {\n        chatroomId,\n      });\n    }\n\n    return () => {\n      //Component Unmount\n      if (socket) {\n        socket.emit(\"leaveRoom\", {\n          chatroomId,\n        });\n      }\n    };\n    //eslint-disable-next-line\n  }, []);\n  // React.useEffect(() => {\n  //   async function fetchMessages() {\n  //     const fullResponse = await fetch(\n  //         \"/get_messages?chatroom=\"+chatroomId\n  //     );\n  //     const responseJson = await fullResponse.json();\n  //     setMessages(responseJson);\n  //   }\n  //\n  //   fetchMessages().then(r => console.log(\"got\"));\n  // }, []);\n  // function postLike(messageId){\n  //   var data = {\n  //     massageId: messageId,\n  //     userAdded: sessionStorage.getItem(\"userEmail\"),\n  //     likeStatus: like,\n  //     unlikeStatus: unlike\n  //   };\n  //   // Submit form via jQuery/AJAX\n  //   $.ajax({\n  //     type: \"POST\",\n  //     url: \"/update_like_to_message\",\n  //     data: data,\n  //   })\n  //       .done(function(data) {})\n  //       .fail(function() {});\n  //   // React.useEffect(() => {\n  //   //   if (socket) {\n  //   //     socket.on(\"updateMessage\", (message) => {\n  //   //       const uMessages = [...messages, message];\n  //   //       setMessages(uMessages);\n  //   //     });\n  //   //   }\n  //   //   //eslint-disable-next-line\n  //   // }, [messages]);\n  //\n  // }\n  function handleLike(e,message) {\n    if(like)\n      setLike(false);\n    else {\n      setUnlike(false);\n      setLike(true);\n    }\n    //postLike(message);\n  }\n\n  function handleUnlike(e,message) {\n    if(unlike)\n      setUnlike(false);\n    else {\n      setUnlike(true);\n      setLike(false);\n    }\n   // postLike(message);\n  }\n  const backToGroups = () => {history.push(\"/groups_menu\"); };\n  return (\n      <div className=\"chatroomPage\">\n        <div className=\"chatroomSection\">\n          <div className=\"cardHeader\">Chatroom Name</div>\n          <div className=\"chatroomContent\">\n            {messages.map((message, i) => (\n                <div key={i} className=\"message\">\n           <span\n               className={\n                userEmail === message.userId ? \"ownMessage\" : \"otherMessage\"\n               }\n           >\n                {message.name}:\n              </span>{\" \"}\n            <Grid container spacing={3}>\n              <Grid item xs={5}>\n                {message.message}\n              </Grid>\n              <Grid item xs={5}>\n                {message.likes!==undefined?message.likes.length:0}\n                <IconButton onClick={handleLike(message._id)}>\n                  <ThumbUpIcon/>\n                </IconButton>\n              </Grid>\n              <Grid item xs={5}>\n                {message.unlikes!==undefined?message.likes.length:0}\n                <IconButton onClick={handleUnlike(message._id)}>\n                  <ThumbDownIcon/>\n                </IconButton>\n              </Grid>\n            </Grid>\n          </div> ))}\n              </div>\n          <div className=\"chatroomActions\">\n            <div>\n              <input\n                  type=\"text\"\n                  name=\"message\"\n                  placeholder=\"Say something!\"\n                  ref={messageRef}\n              />\n            </div>\n            <div>\n              <button className=\"join\" onClick={sendMessage}>\n                Send\n              </button>\n            </div>\n            <button className=\"join\" onClick={backToGroups}>back</button>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default withRouter(Chatroom);\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport $ from \"jquery\";\r\n\r\nconst MessageView = ({ match, socket ,message}) => {\r\n    const [like, setLike] = React.useState(false);\r\n    const [unlike, setUnlike] = React.useState(false);\r\n\r\n    function postLike(){\r\n        var data = {\r\n            massageId: message._id,\r\n            userAdded: sessionStorage.getItem(\"userEmail\"),\r\n            likeStatus: like,\r\n            unlikeStatus: unlike\r\n        };\r\n        // Submit form via jQuery/AJAX\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"/update_like_to_message\",\r\n            data: data,\r\n        })\r\n            .done(function(data) {})\r\n            .fail(function() {});\r\n        // React.useEffect(() => {\r\n        //   if (socket) {\r\n        //     socket.on(\"updateMessage\", (message) => {\r\n        //       const uMessages = [...messages, message];\r\n        //       setMessages(uMessages);\r\n        //     });\r\n        //   }\r\n        //   //eslint-disable-next-line\r\n        // }, [messages]);\r\n\r\n    }\r\n    function handleLike() {\r\n        if(like)\r\n            setLike(false);\r\n        else {\r\n            setUnlike(false);\r\n            setLike(true);\r\n        }\r\n        postLike();\r\n    }\r\n\r\n    function handleUnlike() {\r\n        if(unlike)\r\n            setUnlike(false);\r\n        else {\r\n            setUnlike(true);\r\n            setLike(false);\r\n        }\r\n        postLike();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n              <span\r\n                  className={\r\n                      sessionStorage.getItem(\"userEmail\") === message.userEmail ? \"ownMessage\" : \"otherMessage\"\r\n                  }\r\n              >\r\n                {message.name}:\r\n              </span>{\" \"}\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={5}>\r\n                                    {message.message}\r\n                                </Grid>\r\n                                <Grid item xs={5}>\r\n                                    {message.likes.length}\r\n                                    <IconButton onClick={handleLike}>\r\n                                        <ThumbUpIcon/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                                <Grid item xs={5}>\r\n                                    {message.unlikes.length}\r\n                                    <IconButton onClick={handleUnlike}>\r\n                                        <ThumbDownIcon/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default withRouter(MessageView);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"./css/styles.css\"\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport colors from \"@material-ui/core/colors/common\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    label_data: {\r\n        color:colors.white\r\n    }\r\n}));\r\nexport default function About() {\r\n    const classes=useStyles();\r\n    return (\r\n        <div>\r\n\r\n            <Box\r\n                display=\"flex\"\r\n                bgcolor=\"black\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <img src=\"./images/hiclipart.com (1).png\" roundedCircle width={50} height={50} alt=\"\"/>\r\n\r\n                <span className={classes.label_data}>\r\n                    With the growth in Internet usage, posters delivery in Israel has taken on a new dimension.\r\n                    Online delivery seems to be the latest means through which people order and receive their posters.\r\n                    Whether you want your posters delivered at home or to the office, the flexibility that comes with online delivery can meet such requirements extremely well.\r\n                    The reason that many poster shoppers in Israel prefer online delivery is because of its convenience.\r\n                    With the busy work lives that many people have nowadays, it becomes almost impossible to order and queue for deliveries.\r\n                    At the click of a button, the same can be executed online without any inconveniences.\r\n                    The speed of delivery is also commendable. Whether local or overseas, posters delivery to Israel makes use of some of the best delivery services.\r\n                    This makes online delivery dependable and reliable both to the sender and the recipient.\r\n            </span>\r\n                </Box>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./css/styles.css\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport default function LoaderButton({\r\n                                         isLoading,\r\n                                         className = \"\",\r\n                                         disabled = false,\r\n                                         ...props\r\n                                     }) {\r\n    return (\r\n        <Button\r\n            className={`LoaderButton ${className}`}\r\n            disabled={disabled || isLoading}\r\n            {...props}\r\n        >\r\n            {isLoading &&<Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n            />}\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}","\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel,\r\n\r\n} from \"react-bootstrap\";\r\nimport \"./ForgotPassword.css\";\r\nimport makeToast from \"../../Toaster\";\r\nimport LoaderButton from \"../../components/LoaderButton\";\r\nimport $ from \"jquery\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {sha256} from \"js-sha256\";\r\n\r\nexport default function ForgotPassword() {\r\n    const [code, setCode] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n\r\n    const [codeSent, setCodeSent] = useState(false);\r\n    const [confirmed, setConfirmed] = useState(false);\r\n    const [isConfirming, setIsConfirming] = useState(false);\r\n    const [isSendingCode, setIsSendingCode] = useState(false);\r\n\r\n    function validateCodeForm() {\r\n        return email.length > 0;\r\n    }\r\n\r\n    function validateResetForm() {\r\n        return (\r\n            code.length > 0 &&\r\n            password.length > 0 &&\r\n            password === confirmPassword\r\n        );\r\n    }\r\n\r\n    async function handleSendEmailClick(event) {\r\n        event.preventDefault();\r\n\r\n        setIsSendingCode(true);\r\n\r\n        try {\r\n                  $.ajax({\r\n                        type: \"POST\",\r\n                        url: \"/forgot_password\",\r\n                        data: {email:email},\r\n                    })\r\n                        .done()\r\n                        .fail((e)=>console.log(e));\r\n\r\n           // await Auth.forgotPassword(email);\r\n            setCodeSent(true);\r\n            makeToast(\"info\",\"An email has been sent to your address.\");\r\n\r\n        } catch (error) {\r\n           // onError(error);\r\n            makeToast(\"error\",error);\r\n            setIsSendingCode(false);\r\n        }\r\n    }\r\n\r\n    async function handleConfirmClick(event) {\r\n        event.preventDefault();\r\n\r\n        setIsConfirming(true);\r\n\r\n        try {\r\n            var data={\r\n                code:code,\r\n                e_mail:email,\r\n                password:sha256(password+process.env.SALT_PASSWORD)\r\n            };\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \"/confirm_code\",\r\n                data: data,\r\n            })\r\n                .done()\r\n                .fail();\r\n\r\n            setConfirmed(true);\r\n\r\n        } catch (error) {\r\n            makeToast(\"error\",error);\r\n            setIsConfirming(false);\r\n        }\r\n    }\r\n\r\n    function renderRequestCodeForm() {\r\n        return (\r\n            <form onSubmit={handleSendEmailClick}>\r\n                <FormGroup bsSize=\"large\" controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    bsSize=\"large\"\r\n                    isLoading={isSendingCode}\r\n                    disabled={!validateCodeForm()}\r\n                >\r\n                    Send Confirmation\r\n                </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    function renderConfirmationForm() {\r\n        return (\r\n            <form onSubmit={handleConfirmClick}>\r\n                <FormGroup bsSize=\"large\" controlId=\"code\">\r\n                    <FormLabel>Confirmation Code</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"tel\"\r\n                        value={code}\r\n                        onChange={e => setCode(e.target.value)}\r\n                    />\r\n                    <FormLabel>\r\n                        Please check your email ({email}) for the confirmation code.\r\n                    </FormLabel>\r\n                </FormGroup>\r\n                <hr />\r\n                <FormGroup bsSize=\"large\" controlId=\"password\">\r\n                    <FormLabel>New Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\r\n                    <FormLabel>Confirm Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={e => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    bsSize=\"large\"\r\n                    isLoading={isConfirming}\r\n                    disabled={!validateResetForm()}\r\n                >\r\n                    Confirm\r\n                </LoaderButton>\r\n            </form>\r\n        );\r\n    }\r\nvar history=useHistory();\r\n    function redirectLogin() {\r\n        history.push('/log_in',{from:\"anywhere\"});\r\n    }\r\n\r\n    function renderSuccessMessage() {\r\n        return (\r\n            <div className=\"success\">\r\n                {/*<Glyphicon glyph=\"ok\" />*/}\r\n                <p>Your password has been reset.</p>\r\n                <p>\r\n                    <Link onClick={redirectLogin}>\r\n                        Click here to login with your new credentials.\r\n                    </Link>\r\n\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"ForgotPassword\">\r\n            {!codeSent\r\n                ? renderRequestCodeForm()\r\n                : !confirmed\r\n                    ? renderConfirmationForm()\r\n                    : renderSuccessMessage()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone';\r\nimport Axios from 'axios';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const onDrop = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n        //save the Image we chose inside the Node Server\r\n        Axios.post('/uploadImage', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\nconsole.log(response.data.image);\r\n                    setImages([...Images, response.data.image]);\r\n                    props.refreshFunction([...Images, response.data.image])\r\n\r\n                } else {\r\n                    alert('Failed to save the Image in Server')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const onDelete = (image) => {\r\n        console.log(window.location.origin);\r\n        const currentIndex = Images.indexOf(image);\r\n\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone\r\n                onDrop={onDrop}\r\n                multiple={false}\r\n                maxSize={800000000}\r\n            >\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div style={{\r\n                        width: '300px', height: '240px', border: '1px solid lightgray',\r\n                        display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                    }}\r\n                         {...getRootProps()}\r\n                    >\r\n                        {/*console.log('getRootProps', { ...getRootProps() })*/}\r\n                        {/*console.log('getInputProps', { ...getInputProps() })*/}\r\n                        <input {...getInputProps()} />\r\n                        <AddAPhotoIcon/>\r\n\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => onDelete(image)}>\r\n                         <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={image} alt={`image-${index}`} />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload","import React, { useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n//import Typography from \"@material-ui/core/Typography\";\r\nimport ImageUploader from 'react-images-upload';\r\n//import { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Typography } from 'antd';\r\nimport {Input} from \"@material-ui/core\"\r\nimport $ from \"jquery\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport makeToast from \"../../Toaster\";\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n//import Input from \"@material-ui/core/Input\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport axios from 'axios';\r\nimport FileUpload from '../../helpers/FileUpload'\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\nfunction getStyles(item, list, theme) {\r\n    return {\r\n        fontWeight:\r\n            list.indexOf(item) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\nconst constSizeList = [\"50X70\",\"160X180\",\"100X120\"];\r\nconst constTagList = [\"vehicle\",\"people\",\"music\",\"view\"];\r\nconst AddPoster= () => {\r\n    const [pName,setPName]=React.useState(\"\");\r\n    const [creator,setCreator]=React.useState(\"\");\r\n    const [img,setImg]=React.useState([]);\r\n    const [price,setPrice]=React.useState(0);\r\n    const [sizeList,setSizeList]=React.useState([]);\r\n    const [tagList,setTagList]=React.useState([]);\r\n    const [amount,setAmount]=React.useState(1);\r\n\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\nconst onDrop=(newImages)=> {\r\n        setImg(newImages);\r\n    console.log(pName);\r\n    console.log(img);\r\n    console.log(price);\r\n    console.log(creator);\r\n\r\n\r\n\r\n};\r\n    const handleNameChange = (e) => setPName(e.target.value);\r\n    const handleCreatorChange = (e) => setCreator(e.target.value);\r\n    const handleAmountChange = (e) => setAmount(e.target.value);\r\n    const handlePriceChange = (e) => setPrice(e.target.value);\r\n    const handleTagListChange = (e) => setTagList(e.target.value);\r\n    const handleSizeListChange = (e) => setSizeList(e.target.value);\r\n\r\n    const onSuccess = () => {\r\n        makeToast(\"success\",\"Poster added succefully!\");\r\n        history.push('/stock')\r\n    };\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        makeToast(\"error\", error);\r\n    };\r\n    const onSubmitAddedHandler= (e) => {\r\n        e.preventDefault();\r\n\r\n        var data = {\r\n            name: pName,\r\n            creator: creator,\r\n            img:img,\r\n            price: price,\r\n            sizeList: sizeList,\r\n            tagList: tagList,\r\n            amount: amount\r\n        };\r\n        axios.post(\"/add_poster\",data).then(onSuccess)\r\n            .catch(onFailure);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <br/>\r\n            <br/>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Add Poster\r\n            </Typography>\r\n\r\n            <form\r\n                className={classes.form}\r\n                onSubmit={onSubmitAddedHandler}\r\n                noValidate\r\n            >\r\n                <Grid container spacing={1}>\r\n\r\n                    <Grid item xs={12} >\r\n\r\n                        <TextField\r\n                            name=\"pName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"pName\"\r\n                            label=\"Name\"\r\n                            autoFocus\r\n                            onChange={handleNameChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"creator\"\r\n                            label=\"Creator\"\r\n                            name=\"creator\"\r\n                            onChange={handleCreatorChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"price\"\r\n                            label=\"Price\"\r\n                            name=\"price\"\r\n                            type=\"number\"\r\n                            onChange={handlePriceChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            name=\"amount\"\r\n                            label=\"Amount\"\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            onChange={(e )=> {setAmount(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {/*<ImageUploader\r\n                        withIcon={true}\r\n                        buttonText='Choose image'\r\n                        onChange={onDrop}\r\n                        maxFileSize={5242880}\r\n                        imgExtension={['.jpg', '.gif', '.png', '.gif','.svg','.ico']}\r\n                        label=\"Max of 5mb, excepted extensions are: .jpg , .gif, .png, .gif, .svg, .ico\"\r\n                        singleImage={true}\r\n                        withPreview={true}\r\n                    />*/}\r\n                          <FileUpload refreshFunction={onDrop} />\r\n                    </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-mutiple-chip-label\">Available Sizes</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-mutiple-chip-label\"\r\n                            id=\"demo-mutiple-chip\"\r\n                            multiple\r\n                            value={sizeList}\r\n                            onChange={handleSizeListChange}\r\n                            input={<Input id=\"select-multiple-chip\" />}\r\n                            renderValue={(selected) => (\r\n                                <div className={classes.chips}>\r\n                                    {selected.map((value) => (\r\n                                        <Chip key={value} label={value} className={classes.chip} />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            MenuProps={MenuProps}\r\n                        >\r\n                            {constSizeList.map((size) => (\r\n                                <MenuItem key={size} value={size} style={getStyles(size, sizeList, theme)}>\r\n                                    {size}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} >\r\n                        <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-mutiple-chip-label\">Tags</InputLabel>\r\n                        <Select\r\n                            labelId=\"mutiple-chip-label\"\r\n                            id=\"mutiple-chip\"\r\n                            multiple\r\n                            value={tagList}\r\n                            onChange={handleTagListChange}\r\n                            input={<Input id=\"select-multiple-chip\" />}\r\n                            renderValue={(selected) => (\r\n                                <div className={classes.chips}>\r\n                                    {selected.map((value) => (\r\n                                        <Chip key={value} label={value} className={classes.chip} />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            MenuProps={MenuProps}\r\n                        >\r\n                            {constTagList.map((tag) => (\r\n                                <MenuItem key={tag} value={tag} style={getStyles(tag, tagList, theme)}>\r\n                                    {tag}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    className={classes.submit}\r\n                >\r\n                    Add\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\nexport default withRouter(AddPoster);\r\n//                        imgExtension={['.jpg', '.gif', '.png', '.gif','svg']}\r\n// <Multiselect\r\n//     options={constSizeList}\r\n//     selectedValues={sizeList} // Preselected value to persist in dropdown\r\n//     onSelect={e => {setSizeList(e.target.value)}} // Function will trigger on select event\r\n//     displayValue=\"Select Tags\" // Property name to display in the dropdown options\r\n//     maxWidth=\"xs\"\r\n// />","import React from \"react\";\r\nimport HomePage from '../pages/home'\r\nimport Header from \"./header\";\r\nimport {Route, Switch, useHistory} from \"react-router-dom\";\r\n//import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Account from \"../pages/account\";\r\nimport Register from \"../pages/register\";\r\n//import \"tabler-react/dist/Tabler.css\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport makeToast from \"../Toaster\";\r\nimport io from \"socket.io-client\";\r\nimport Cart from \"../pages/cart\";\r\nimport Login from \"../pages/login\";\r\nimport Liked from \"../pages/liked\";\r\nimport Contact from \"../pages/contact\";\r\nimport Store from \"../pages/Store\";\r\nimport UpdateUserDetails from \"../pages/updateUserDetails\";\r\nimport OrderList from \"../pages/orderLists\";\r\nimport Stock from \"../pages/stock\";\r\nimport PosterData from \"../pages/poster\";\r\n//import ForgotPassword from \"../pages/forgotPassword\";\r\nimport UsersData from \"../pages/users\";\r\nimport GroupsMenu from \"../pages/groupsMenu\"\r\nimport Chatroom from \"../pages/chatRoom\"\r\nimport {Error404Page} from \"tabler-react\";\r\n\r\nimport About from \"./about\";\r\nimport ForgotPassword from \"../pages/forgotPassword\";\r\nimport AddPoster from \"../pages/addPoster\";\r\nimport RegisterByAdmin from \"../pages/addUserByAdmin\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nexport default function App(props: Props): React.Node {\r\n\r\n\r\n    const [socket, setSocket] = React.useState(null);\r\n    const setupSocket = () => {\r\n        const token = sessionStorage.getItem(\"userCategory\");\r\n        if (token && !socket) {\r\n            const newSocket = io(window.location.href, {\r\n                query: {\r\n                    //token: sessionStorage.getItem(\"userCategory\"),\r\n                    userId: sessionStorage.getItem(\"userEmail\")\r\n                },\r\n            });\r\n\r\n            newSocket.on(\"disconnect\", () => {\r\n                setSocket(null);\r\n                setTimeout(setupSocket, 1000);\r\n                makeToast(\"error\", \"Socket Disconnected!\");\r\n            });\r\n\r\n            newSocket.on(\"connect\", () => {\r\n                makeToast(\"success\", \"Socket Connected!\");\r\n            });\r\n\r\n            setSocket(newSocket);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setupSocket();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n   if( sessionStorage.getItem(\"userCategory\")===undefined)\r\n        sessionStorage.setItem(\"userCategory\",\"\");\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Grid>\r\n            <Header/>\r\n                </Grid>\r\n                <Grid>\r\n            <Switch>\r\n                <Route exact from=\"/\" render={(props) => <div>\r\n                    <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                \r\n                    <HomePage{...props}/>\r\n                </div>}/>\r\n                <Route exact path=\"/account\" render={(props) =>\r\n                    <div>\r\n                        \r\n                             <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                        \r\n                         <Account{...props} />\r\n                    </div>}/>\r\n                <Route exact from=\"/register\" render={() =>\r\n                    <div>\r\n                        \r\n                            <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                        \r\n                        <Register setupSocket={setupSocket}/>\r\n                    </div> } />\r\n                    <Route exact from=\"/cart\" render={(props) =>\r\n                        <div>\r\n                        \r\n                            <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                        \r\n                              <Cart{...props} />\r\n                        </div>} />\r\n                    <Route path=\"/log_in\" render={() =><div>\r\n                        \r\n                            <NavigationBar/>\r\n                        \r\n                         <Login setupSocket={setupSocket} />\r\n                    </div>} exact/>\r\n                    <Route exact from=\"/liked\" render={(props) =>\r\n                        <div>\r\n                            \r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            \r\n                              <Liked{...props} />\r\n                        </div>} />\r\n                    <Route exact from=\"/contact\" render={(props) =>\r\n                        <div>\r\n                            \r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            \r\n                            <Contact {...props} />\r\n                        </div> }/>\r\n                    <Route exact from=\"/store\" render={(props) =>\r\n                        <div>\r\n                            \r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            \r\n                             <Store{...props} />\r\n                        </div>} />\r\n                    <Route exact from=\"/users\" render={(props) =>\r\n                        <div>\r\n                            <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                             <UsersData{...props} />\r\n                        </div>} />\r\n                    <Route exact from=\"/user_edit\" render={(props) =>\r\n                        <div>\r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            <UpdateUserDetails{...props} />\r\n                        </div>} />\r\n                    <Route exact from=\"/order_list\" render={(props) =>\r\n                        <div>\r\n                            \r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            \r\n                            <OrderList{...props} />\r\n                        </div>} />\r\n                    <Route exact from=\"/stock\" render={(props) =>\r\n                        <div>\r\n                            \r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            \r\n                            <Stock{...props} />\r\n                        </div>} />\r\n                    <Route exact from=\"/poster/:posterId\" render={(props) =>\r\n                        <div>\r\n                            \r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            \r\n                              <PosterData{...props} />\r\n                        </div>} />} />\r\n                    <Route exact from=\"/forgot_password\" render={(props) =>\r\n                        <div>\r\n                            \r\n                                <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                            \r\n                            <ForgotPassword{...props} />\r\n                        </div>} />\r\n                    <Route path=\"/groups_menu\" render={() =>\r\n                        <div>\r\n                        \r\n                        <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                        \r\n                            <GroupsMenu socket={socket} />\r\n                        </div>\r\n                        } exact/>\r\n                    <Route path=\"/chatroom/:id\" render={() =>\r\n                        <div>\r\n                        \r\n                        <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                        \r\n                             <Chatroom socket={socket} />\r\n                        </div>}\r\n                    exact/>\r\n                <Route path=\"/add_poster\" render={() =>\r\n                    <div>\r\n                        \r\n                            <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                        \r\n                         <AddPoster />\r\n                    </div>}\r\n                       exact/>\r\n                <Route path=\"/add_user\" render={() =>\r\n                    <div>\r\n                        \r\n                            <NavigationBar category={sessionStorage.getItem(\"userCategory\")}/>\r\n                        \r\n                         <RegisterByAdmin setupSocket={setupSocket} />\r\n                    </div>}\r\n                       exact/>\r\n                    <Route render={(props) =><Error404Page/>} />\r\n                    </Switch>\r\n                    </Grid>\r\n                {/* <Grid>\r\n                            <Box pt={4}>\r\n                                <About />\r\n                            </Box>\r\n                            </Grid>*/}\r\n            </Grid>\r\n                    </div>\r\n\r\n                    );\r\n                    }\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport { blueGrey, lightGreen } from '@material-ui/core/colors'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#8eacbb',\r\n            main: '#607d8b',\r\n            dark: '#34515e',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#e7ff8c',\r\n            main: '#b2ff59',\r\n            dark: '#7ecb20',\r\n            contrastText: '#000',\r\n        },\r\n        openTitle: blueGrey['400'],\r\n        protectedTitle: lightGreen['400'],\r\n        type: 'light'\r\n    }\r\n})\r\n\r\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./pages/chatRoom/common.css\";\nimport \"./pages/chatRoom/chatroom.css\";\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter } from 'react-router-dom';\nimport InPosterApp from \"./components\";\nimport CartContextProvider from \"./contexts/CartContext\";\nimport { ThemeProvider } from '@material-ui/styles'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n      <CartContextProvider>\n          <ThemeProvider theme={theme}>\n          <BrowserRouter>\n                  <div>\n                  <InPosterApp/>\n              </div>\n       </BrowserRouter>\n          </ThemeProvider>\n       </CartContextProvider>\n          <div>\n\n          </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}